{# src/Lci/BoilerBoxBundle/Resources/views/Bons/form_saisie_bons.html.twig #}

{% extends "LciBoilerBoxBundle::secondBonsLayoutLogged.html.twig" %}

{% block meta_viewport %}
    <meta name="viewport" content="width=device-width, initial-scale=0.5, shrink-to-fit=no">
{% endblock meta_viewport %}

{% block boilerBoxCSS %}
    {{ parent() }}
	<link rel="stylesheet" type="text/css" href="{{ asset('bundles/lciboilerbox/css/saisie_ba.css') }}" media='screen' />
	<link rel="stylesheet" type="text/css" href="{{ asset('bundles/lciboilerbox/css/saisie_ba_print.css') }}" media='print' />
	<style>
	.main-box{
    	position: relative;
    	display: flex;
    	flex-flow: column wrap;
    	justify-content: space-between;
		width: initial;
		min-width: initial;
		max-width: initial;
		margin: 0;
	}
	.form__btn--col{
		width: initial;
	}
	#contacts_deja_associes{
		display: flex;
		flex-flow: row wrap;
		justify-content: space-between;
		margin-top: -16px;
	}
	#contacts_deja_associes p{
		width: 48%;
		padding: 8px;
		margin-bottom: 6px;
		border-radius: 3px;
		background: var(--light-grey);
		font-size: 9pt;
		font-weight: 500;
		cursor: pointer;
	}
	#contacts_deja_associes p:hover{
		background: var(--grey);
		color:  var(--black);
	}
	#container_new_contact input, #encart_fichiers_siteBA{
		margin-bottom: 16px;
	}
	.erreur_formulaire {
		border: 2px solid red !important;
	}
	</style>
{% endblock boilerBoxCSS %}

{% block title %}{{ parent() }} : Bons d'interventions{% endblock title %}
{% block class_menu_boiler %} elargir {% endblock class_menu_boiler %}
{% form_theme form 'templates/form/fields.html.twig' %}

{% block mainBody %}


<input type='hidden' name='id_contact' id='idContact'>

<header class="sub-header sub-header--blue">
	<h1 class="sub-header__title">Bons d'interventions</h1>
</header>

{{ form_start(form, {'action':path('lci_bons_saisie'), 'method':'POST', 'name':'myForm' }) }}
{{ form_errors(form) }}
<input type='hidden' value='non' name='enregistrement' id='enregistrement'>
<main id="grid-ba-2" class="main-content grid">
	<h1 class="main-content__title grid__one">Nouveau Bon</h1>
	<section class="grid__two">
	<fieldset class="fieldset">
		<h2 class="fieldset__title">Informations</h2>
		<div class="form__field rel">
    		{{ form_label(form.site) }}
			{{ form_widget(form.site) }}
			{{ form_errors(form.site) }}
			<button type="button" id="bntBonsSite" class="btn btn--main add tooltip-wrapper" onclick="togglePopUp(bonsSite)"><span class="tooltip">Créer site</span></button>
		</div>
        <div class="form__field form__field--double">
			<div>
            	{{ form_label(form.numeroAffaire) }}
            	{{ form_widget(form.numeroAffaire) }}
            	{{ form_errors(form.numeroAffaire) }}
            </div>
        </div>
		{# Gestion du nom du contact en javascript car on le gère depuis le select html #}
        <div class="form__field cacher">
            {{ form_errors(form.nomDuContact) }}
            {{ form_label(form.nomDuContact) }}
        	{{ form_widget(form.nomDuContact) }}
        </div>
		<div class="form__field form__field--double">
			<div>
                {{ form_errors(form.service) }}
                {{ form_label(form.service) }}
                {{ form_widget(form.service) }}
			</div>
			<div>
                {{ form_errors(form.typeIntervention) }}
                {{ form_label(form.typeIntervention) }}
                {{ form_widget(form.typeIntervention) }}
			</div>
		</div>
		<div class="form__field form__field--double">
			<div>
				{{ form_label(form.userInitiateur) }}
				{{ form_widget(form.userInitiateur) }}
				{{ form_errors(form.userInitiateur) }}
			</div>
			<div>
				{{ form_label(form.user) }}
				{{ form_widget(form.user) }}
				{{ form_errors(form.user) }}
			</div>
		</div>
		<div class="form__field form__field--double">
			<div>
				{{ form_label(form.dateInitialisation) }}
				{{ form_widget(form.dateInitialisation) }}
				{{ form_errors(form.dateInitialisation) }}
				
			</div>
			<div>
				{{ form_errors(form.dateSignature) }}
				{{ form_label(form.dateSignature) }}
				{{ form_widget(form.dateSignature) }}
			</div>
		</div>
	</fieldset>
	<fieldset class="fieldset">
		<h2 class="fieldset__title">Planning</h2>
		<div class="form__field form__field--double">
			<div>
				{{ form_label(form.dateDebutIntervention) }}
				{{ form_widget(form.dateDebutIntervention) }}
				{{ form_errors(form.dateDebutIntervention) }}
				
			</div>
			<div>
				{{ form_label(form.dateFinIntervention) }}
				{{ form_widget(form.dateFinIntervention) }}
				{{ form_errors(form.dateFinIntervention) }}
			</div>
		</div>
	</fieldset>
	<fieldset class="fieldset">
		<h2 class="fieldset__title">Localisation</h2>
		<div id='map'></div>
	</fieldset>
	</section>

	<section class="grid__three">
		<fieldset class="fieldset">
			<h2 class="fieldset__title">Contact</h2>
			<div class="form__field rel">
				<label>Nom</label>
				<select id='select_contact'>
					<option></option>
				</select>
				<button type="button" id='btn_contact' class="btn btn--main add tooltip-wrapper cacher" onClick="gestionDesContacts2();"><span class="tooltip">Créer contact</span></button>
			</div>
			<div class="form__field form__field--double">
				<div>
					{{ form_errors(form.emailContactClient) }}
                    {{ form_label(form.emailContactClient) }}
                    {{ form_widget(form.emailContactClient, {'attr':{'class':"disabled"} }) }}
				</div>
				<div>
					{{ form_errors(form.telephoneContactClient) }}
                    {{ form_label(form.telephoneContactClient) }}
					{{ form_widget(form.telephoneContactClient, {'attr':{'class':"disabled"} }) }}
				</div>
			</div>
		</fieldset>
		<fieldset class="fieldset">
			<h2 class="fieldset__title">Équipement</h2>
			<div class="form__field rel">
				<span id="add-equipBon">Ajouter équipement</span>
                <button type="button" id="btn_ajout_equipement2" class="btn btn--main add tooltip-wrapper" onclick="gestionDesEquipements2();"><span class="tooltip">Créer un équipement</span></button>
			</div>
			<div class="form__field rel">
                <div style='padding:5px;' >
					<select id='select_equipement'>
						 <option></option>
                        {% for e_siteBA in es_sitesBA %}
                            <option value="{{ e_siteBA.id }}">{{ e_siteBA.intitule }}</option>
						{% endfor %}
                   	</select>
					
					<div style='padding:20px;'>
						<div id="liste_des_equipements_selectionnes" style='border-bottom:1px dashed black; padding-bottom:10px;'>
							<div class='form_field rel'><label>Equipements sélectionnés pour le bon</label></div>
						</div>

                    	<div id="liste_des_equipements" style='padding-top:10px;'>
							<div class='form_field rel'><label>Liste des équipements du site séléctionné</label></div>
                    	    <div id='insert_equipement'>
                    	    </div>
                    	</div>
					</div>
				</div>
			</div>
		</fieldset>
		<fieldset class="fieldset">
			<h2 class="fieldset__title">Photos</h2>
			<label class="form__field rel">
                {{ form_label(form_site.cheminDossierPhotos) }}
                {{ form_widget(form_site.cheminDossierPhotos) }}
                {{ form_errors(form_site.cheminDossierPhotos) }}
				<button type="button" class="btn btn--main"></button>
			</label>
		</fieldset>
		<fieldset class="fieldset">
			<h2 class="fieldset__title">Fichier(s)</h2>
			<div class="form__field rel">
				<span id="add-fichierBon">Ajouter fichier PDF (2Mo max)</span>
				<button type="button" class="btn btn--main add tooltip-wrapper" onclick="gestionDesFichiers();"><span class="tooltip">Ajouter un fichier</span></button>
			</div>
			<div id='fichiers_deja_joints2' class="add-list">
				<div class="add-list__added">Test<div class="close-cross"></div></div>
				<div class="add-list__added">Test<div class="close-cross"></div></div>
			</div>
		</fieldset>
		<div class="main-content__btn">
			<a href="{{ path('lci_bons_attachements') }}" class="btn_menu btn btn--second">Retour</a>
			<button class="btn_menu btn btn--main" onClick="checkValidationBeforeSend(); return false;">Créer</button>
		</div>
	</section>
</main>
{{ form_rest(form) }}
{{ form_end(form) }}



<!-- popup Equipement 2 -->
<section id="popupEquipement2" class="popup cacher">
    {{ render(path('lci_ajax_bon_new_equipement')) }}
</section>




<!-- popup Site -->
<section id="bonsSite" class="popup cacher">
	<div class="popup__wrapper" style="width:500px;">
		<header class="popup__header">
			<h1 id='titre_nouveau_siteBA' class="popup__title">Nouveau Site</h1>
			<div class="close-cross" onclick="retourPopupSite();"></div>
		</header>
		<div class="popup__content">
			{{ form_start(form_site, {attr: {'id': 'site_ba', 'class':'form' }}) }}
			{{ form_errors(form_site) }}
				<input type='hidden' id='save_form_bon' name='save_form_bon' />
				<input type='hidden' name='id_site_ba' id='id_site_ba' />
				<fieldset class="fieldset">
					<div class="form__field">
						{{ form_label(form_site.intitule) }}
						{{ form_widget(form_site.intitule) }}
					</div>
					<div class="form__field">
						{{ form_label(form_site.adresse) }}
						{{ form_widget(form_site.adresse) }}
						{{ form_errors(form_site.adresse) }}
					</div>
					<div class="form__field">
						{{ form_label(form_site.lienGoogle) }}
						{{ form_widget(form_site.lienGoogle) }}
						{{ form_errors(form_site.lienGoogle) }}
					</div>
					<div class="form__field">
						{{ form_label(form_site.informationsClient) }}
						{{ form_widget(form_site.informationsClient) }}
						{{ form_errors(form_site.informationsClient) }}
					</div>
					<div class="form__field">
						{{ form_label(form_site.contacts) }}
						{{ form_widget(form_site.contacts) }}
						{{ form_errors(form_site.contacts) }}
					</div>
				</fieldset>
	            <div id="ajout_contact" class='form__field'>
	            	<div class='ligne_error'>{{ form_errors(form_site.contacts) }}</div>
	            	<div class='nouveau_probleme_ligne form__field'>
	            		<div>
	            			<span style='font-size:12px'></span>
	            			<div id='contacts_deja_associes'></div>
	            			<span id='lien_ajout_contact'></span>
	            			<div id='container_new_contact' style='overflow:auto;'></div>
	            		</div>
	            	</div>
	            	<div class='form__field'>
	            		<div id='champ_ajout_fichiers_siteBA'>
	            			{{ form_widget(form_site.fichiersJoint) }}
	            		</div>
	            	</div>

	            	<div id="ajout_fichier_siteBA_mobile_portrait" class='ajout_fichier_joint'>
	            		<div class='ligne_error'></div>
	            		<div class='form__field'>
	            			<label class="flex flex--row" style="display:flex!important;">
	            				{{ form_label(form_site.fichiersJoint) }}
	            				<span class="sous_label_fichier">&nbsp;({{ max_upload_size }}o max) : </span>
	            			</label>
	            			<div id='fichiers_deja_joints' style='font-size:12px; font-style:italic; line-height:1.6;'></div>
	            			<span id='lien_ajout_fichier_siteBA'></span>
	            		</div>
	            		<div class='form__field'>
	            			<div id='champ_ajout_fichiers_siteBA'>
	            				{{ form_widget(form_site.fichiersJoint) }}
	            				{{ form_errors(form_site.fichiersJoint) }}
	            			</div>
	            		</div>
	            	</div>
	            </div>
				<div id='encart_fichiers_siteBA'></div>
	        {{ form_rest(form_site, {attr: {'class':'btn' }}) }}
			{{ form_end(form_site) }}
			<div id="bloc_contact_pour_impression" class="print"></div>
		   	<div class='main-box__btn notToBePrinted'>
		   		<button class="btn btn--second" onclick="retourPopupSite();">Retour</button>
		   		<button class="btn_menu btn btn--main" onClick="attendreRechargement(); document.forms['site_ba'].submit(); return false;">Valider</button>
			</div>
		</div>
	</div>
</section>


<!-- popup Nouveau Contact -->
<section id="bonsNouveauContact" class="popup cacher">
	<div class="popup__wrapper">
		<header class="popup__header">
			<h1 id='titre_nouveau_contact' class="popup__title">Nouveau Contact</h1>
			<div class="close-cross" onclick="togglePopUp(bonsNouveauContact)"></div>
		</header>
		<div class="popup__content">
            <div class="form__field">
                <label>Nom</label>
                <input type='text' name='nomContact' id='nomContact'>
            </div>
            <div class="form__field">
                <label>Prénom</label>
                <input type='text' name='prenomContact' id='prenomContact'>
            </div>
            <div class="form__field">
                <label>Mail</label>
                <input type='text' name='emailContact' id='emailContact'>
            </div>
            <div class="form__field">
                <label>Téléphone</label>
                <input type='text' name='telephoneContact' id='telephoneContact'>
            </div>
            <div class="form__field">
                <label>Fonction</label>
                <input type='text' name='fonctionContact' id='fonctionContact'>
            </div>
            <div class='form__btn form__btn--col notToBePrinted'>
                <button onClick="modifierContact(); return false;" class="btn_menu btn btn--main btn--wide">Modifier</button>
                <button onClick="supprimerContact(); return false;" class="btn_menu btn btn--delete btn--wide">Supprimer</button>
            </div>
		</div>
	</div>
</section>



<!-- popup Nouveau Contact V2-->
<section id="popupContact2" class="popup cacher">
	{{ render(path('lci_ajax_siteba_new_contact')) }}
</div>


<div class="navigation-mobile">
	<div class=""></div>
	<div class=""></div>
</div>
{% endblock mainBody %}









{% block javascript %}
	{# Script d'autocompletion de l'adresse #}
    <script type='text/javascript'>

	function attendreRechargement()
	{
		$('*').css({'cursor' : 'wait'});
	}

	// Tableau des équipements selectionnés 
	// il permet de ne pas réafficher les équipements en doublon lors de la modification du select site
	var tabDesEquipementsSelectionnes = [];

    // Fonction style barre de navigation page active
    $(window).on('load', function pageActive(){
    	$('.side-nav .bons-interv').addClass('active');
    });

	var maCarte;
	var $changeEnCours;

    function initAutocomplete(){
		var monMarqueur;

        maCarte = new google.maps.Map(document.getElementById('map'), {
            center: {lat: 50.474, lng: 2.97118},
            zoom: 4,
            mapTypeId: 'roadmap'
        });

        /* Mise en place du textbox dans la carte */
        var input = document.getElementById('site_ba_adresse');

        var autocomplete = new google.maps.places.Autocomplete(input);
		autocomplete.setFields(['place_id', 'geometry']);


		/* Placement du marqueur sur l'emplacement selectionné */
        maCarte.addListener('click', function(e){
			if (monMarqueur != null) {
				monMarqueur.setMap(null);
			}
			monMarqueur = new google.maps.Marker({
				position: e.latLng,
				map: maCarte,
				icon: 'http://maps.google.com/mapfiles/kml/paddle/blu-circle.png'
			});
			maCarte.setZoom(19);
			maCarte.setCenter(monMarqueur.getPosition());
			maCarte.setMapTypeId('satellite');

			
			/* Service de geocoding pour récupérer l'adresse du lieu selectionné par la souris */
			/* On ne modifie que l'url en fonction du marqueur */
			geocoder = new google.maps.Geocoder();
			geocoder.geocode({'location':monMarqueur.getPosition()}, function(results, status) {
				if (status == 'OK') {
					$('#site_ba_lienGoogle').val('latLng' + monMarqueur.getPosition());
					/*$('#site_ba_adresse').val(results[0].formatted_address);*/
					$('#site_ba_lienGoogle').attr('readonly', true);
				} else {
					alert('Aucune adresse trouvée pour le lieu selectionné');
				}
			});
        });


        autocomplete.addListener('place_changed', function() {
            var place = autocomplete.getPlace();
			if (place.geometry) {
				maCarte.panTo(place.geometry.location);
				maCarte.setZoom(19);
				maCarte.setMapTypeId('satellite');
            	monMarqueur = new google.maps.Marker({
                    position: place.geometry.location,
                    map: maCarte
            	});
			}
			$('#site_ba_lienGoogle').val('latLng' + place.geometry.location);
			$('#site_ba_lienGoogle').attr('readonly', true)
		});

		$('#site_ba_lienGoogle').on('change', function() {
			var $objPos = {};

			var $position = $('#site_ba_lienGoogle').val();
			// Si la coordonnée est retournée par l'outil de google map On zoom sur le lieu de l'adresse selectionnée
			// Sinon si l'adresse provient du site web google map, on extrait les coordonnées
			var $coordonnees = $position.match(/latLng\((.+?),(.+?)\)/);
			if ($coordonnees == null) 
			{
				geocoder = new google.maps.Geocoder();
				var $adresse = 'https://maps.googleapis.com/maps/api/geocode/json?address=' + $('#site_ba_lienGoogle').val() + '&key=' + "{{ apiKey }}";
				$.ajax({
					url: $adresse,
					method: "get",
					success: function(msg) {
						$objPos.lat = msg['results'][0]['geometry']['location']['lat'];
						$objPos.lng = msg['results'][0]['geometry']['location']['lng'];
						maCarte.setCenter($objPos);
						maCarte.setZoom(19);
						maCarte.setMapTypeId('satellite');
						monMarqueur = new google.maps.Marker({
            				position: $objPos,
            				map: maCarte
        				});
						$latLng = 'latLng(' + $objPos.lat + ',' + $objPos.lng + ')';
                        $('#site_ba_lienGoogle').val($latLng);
					}
				});
			} else {
				$objPos.lat = parseFloat($coordonnees[1]);
				$objPos.lng = parseFloat($coordonnees[2]);
        		maCarte.setCenter($objPos);
				maCarte.setZoom(19);
				maCarte.setMapTypeId('satellite');
			}
		});
    }


	var $indexFichier = 1;
	var $indexFichierSiteBA = 1;
	var $indexContactSiteBA = 1;
	var $container;
	var $container_site;
	var $container_contact;

	var $tab_contact = new Array();

	$(document).ready(function() 
	{
        /* Mise en place de l'objet datepicker avec 2 mois affichés */
        $.datepicker.setDefaults({
            numberOfMonths: 1,
            dateFormat: 'dd/mm/yy',
            showWeek: true,
            gotoCurrent: true,
            changeMonth: true,
            changeYear: true,
            showAnim: "fadeIn",
            maxDate: '+2Y'
        });


		setDatePicker();
		

		

		/* Récupération du container contenant l'attribut data-prototype */
		$container = $('#bons_attachement_fichiersPdf');
		/* Récupération du container des fichiers des SitesBA */
		$container_site = $('#encart_fichiers_siteBA'); //$('#site_ba_fichiersJoint');
        /* Récupération du container des contacts des SitesBA */
        $container_contact = $('#site_ba_contacts');

	

        /* Lien permettant l'ajout d'un nouveau contact au site */
        var $addLinkContact = $('<a href="#" id="add_contact" class="small_link">Ajouter un contact</a>');
		/* Lien permettant l'ajout d'un nouveau fichier au bon */
		var $addLink = $('<a href="#" id="add_fichier" class="small_link">Ajouter un fichier</a>');
		/* Lien permettant l'ajout d'un nouveau fichier au site */
		var $addLinkFichierSiteBA = $('<a href="#" id="add_fichier_site" class="small_link">Ajouter un fichier</a>');


		/* Ajout du lien dans la div du container */
		$('#lien_ajout_fichier').html($addLink);
		/* Ajout du lien dans la div du container de fichiers des sites */
		$('#lien_ajout_fichier_siteBA').html($addLinkFichierSiteBA);
        /* Ajout du lien dans la div du container de contact des sites */
        $('#lien_ajout_contact').html($addLinkContact);



		/* Ajout d'un listener pour créer un nouveau champs lors du clic sur le lien */
		$addLink.click(function(e){
			ajoutChampFichier();
			e.preventDefault();
			$('#bons_attachement_fichiersPdf_' + ( $indexFichier - 1 ) + '_file').trigger("click");
			return false;
		});
		/* Ajout d'un listener pour création d'un champs lors du clic sur le lien des fichiers des sitesBA */
		$addLinkFichierSiteBA.click(function(e){
            ajoutChampFichierSiteBA();
            e.preventDefault();
            $('#site_ba_fichiersJoint_' + ( $indexFichierSiteBA - 1 ) + '_file').trigger("click");
            return false;
        });
        /* Ajout d'un listener pour création d'un champs contact lors du clic sur le lien des contacts */
        $addLinkContact.click(function(e){
            ajoutChampContactSiteBA();
            e.preventDefault();
            $('#site_ba_contacts_' + ( $indexContactSiteBA - 1 ) + '_nom').trigger("click");
            return false;
        });



		// Gestion du select intervenant
        $('#bons_attachement_user').change(function() 
		{
			if ($('#bons_attachement_user').val() !=  null)
			{
				$('#bons_attachement_user').removeClass('erreur_formulaire');
			}
        });

		// Gestion du select site
		/* Affichage des informations du site selectionné dans l'encart SiteBA */
		$('#bons_attachement_site').change(function()
		{
			$changeEnCours = true;

			// Réinitialisation des informations concernant les sites
			$('#site_ba_reset').trigger('click');
			resetInfosSite();

			// Retire des encart rouge indiquant les champs manquants pour l'envoi du formulaire site
			resetCheck();

			/* On réinitialise les valeurs de la fiche client et du contact associé au bon */
			resetInfosContact();

			/* On réinitalise le select contact */
			$('#select_contact').html("<option></option>");

			// On lance le raffraichissement de la popup Equipement
            refreshSelectEquipements();

			// SI UN SITE EST SELECTIONNE
			// Appel ajax pour obtenir les informations liées au site
			// + Affichage du bouton de création/modification de contact
			if ($('#bons_attachement_site').val() != '')
			{
				// On retire l'encart rouge indiquant qu'un site est necessaire pour l'envoi du formulaire
				$('#bons_attachement_site').removeClass('erreur_formulaire');

				// Affichage du bouton permettant la création/modification de contact
				$('#btn_contact').removeClass('cacher');

				$('#titre_nouveau_siteBA').text('Modification du site');

            	var $id_site_ba = this.value;
            	var $url = "{{ path('lci_ajax_bons_get_siteBA') }}";
            	$.ajax({
            	    url: $url,
            	    method: "post",
            	    data: {'id_site_ba':$id_site_ba},
            	    success: function(msg) 
					{
						var $tab_siteBA = $.parseJSON(msg);

						$('#id_site_ba').val($tab_siteBA[0]);
						$('#site_ba_intitule').val($tab_siteBA[1]);
						{# $('#site_ba_intitule').attr('readonly', true); // On autorise le changement du nom du site #}
						$('#site_ba_adresse').val($tab_siteBA[2]);
						$('#site_ba_lienGoogle').val($tab_siteBA[3]);			
						$('#site_ba_informationsClient').val($tab_siteBA[4]);
						/* Gestion des contacts client  : On split sur ; pour récupérer la 1ere valeur qui correspond à l'id pour requete ajax et affichage de la fiche client*/
						$tab_contact = $tab_siteBA[5];

						html_option = "<option></option>";
						$.each($tab_siteBA[5], function($index, $tabContact) {
							ficheContactPourImpression($index);
							$html = '<p>';
							$html = $html + $tabContact['nom'] + '</p>';
                	        $('#contacts_deja_associes').append($html);
							html_option += "<option value='" + $index + "'>" + $tabContact['nom'] + "</option>";
                	    });
						$('#select_contact').html(html_option);	
            			
						// On re sélectionne le contact précédemment selectionné
						{% if id_last_site is not null %}
            				if($('#bons_attachement_nomDuContact').val() != '')
            				{
                				$('#select_contact option:contains("' + $('#bons_attachement_nomDuContact').val() + '")').prop('selected', true);
								$('#select_contact').trigger('change');
            				}
						{% endif %}

						// Ajout des noms des fichiers précédemment joints au site
						if ($tab_siteBA[6]) {
							$.each($tab_siteBA[6], function(index, value) {
								$('#fichiers_deja_joints').append(value + '<br />');
								$('#fichiers_deja_joints2').append("<div class='add-list__added'>" + value + "<div class='close-cross' onClick='supprimeFile(" + $tab_siteBA[7][index] + ");'></div></div>");
							});
						}
		
						// Ajout des équipements précédemment joints au site
						if ($tab_siteBA[8]) 
						{
                            $.each($tab_siteBA[8], function(index, value) {
                                $('#equipements_deja_joints').append(value + '<br />');
                            });
                        }

						$('#site_ba_lienGoogle').trigger('change');
						/* Placement du marqueur sur la page */
						ajoutMarqueur($('#site_ba_lienGoogle').val());
						$changeEnCours = false;
                	    return true;
                	},
					error: function(status, msg, tri) {
						alert('error ' + msg + tri);
					}
            	});
			} else {

				// Si aucun site n'est selectionné : On réinitialise les informations de la popup site
				// + désactivation du bouton de création / modification de contact
				$('#site_ba_reset').trigger('click');
				$('#btn_contact').addClass('cacher');
			}
        });
		
		/* Lors du clic sur reset on réautorise l'écriture du nom du site et on supprime la valeur de l'identifiant du site  pour éviter une mise à jour */
		$('#site_ba_reset').click(function()
		{
			/* On réinitialise les informations de la popup site
			resetInfosSite();

            /* On réinitialise les valeurs de la fiche client et du contact associé au bon */
            resetInfosContact();

            /* On réinitalise le select contact */
            $('#select_contact').html("<option></option>");
		});

		/* Permet de selectionner le dernier site - permet de réafficher le site après l'ajout d'un contact */
        {% if id_last_site is defined %}
            var id_last_site = "{{ id_last_site }}";
            // Sauvegarde des informations du contact
            save_nom_contact  = $('#bons_attachement_nomDuContact').val();
            save_tel_contact  = $('#bons_attachement_telephoneContactClient').val();
            save_mail_contact = $('#bons_attachement_emailContactClient').val();

            // On rédéfini le select précédemment selectionné dans le select
            $('#bons_attachement_site').val(id_last_site);

            // On active le listener de changement de site courant
            $('#bons_attachement_site').trigger('change');

            // On redéfini les informations du contact précédemment selectionné
            $('#bons_attachement_nomDuContact').val(save_nom_contact);
            $('#bons_attachement_telephoneContactClient').val(save_tel_contact);
            $('#bons_attachement_emailContactClient').val(save_mail_contact);
        {% endif %}


        // Si la création d'un équipement est en erreur : affichage du formulaire
        {% if echec_creation_equipement == true %}
            $('#btn_ajout_equipement2').trigger('click');
        {% endif %}


	    // Gestion du select contact
	    $('#select_contact').change(function()
	    {
			// Réinitialisation des informations liées au contact
			resetInfosContact();

	        // Gestion du texte du bouton d'ajout/modification du contact
			// + Gestion du titre de la popup Contact
	        if ($('#select_contact').val() === '')
	        {
	            $('#select_contact + button > span').text('Créer un contact');
				$('#titre_nouveau_contact').text('Nouveau contact');
	        } else {
	            $('#select_contact + button > span').text('Modifier le contact');
				$('#titre_nouveau_contact').text('Modifier le contact');
	        }

	        // Affichage des informations concernant le contact sélectionné
        	var $index_tab_contact = $('#select_contact').val();
        	if ($('#select_contact').val() != '')
        	{
        	    $('#contact_id').val($tab_contact[$index_tab_contact]['id']);
        	    $('#contact_nom').val($tab_contact[$index_tab_contact]['nom']);
        	    $('#contact_prenom').val($tab_contact[$index_tab_contact]['prenom']);
        	    $('#contact_mail').val($tab_contact[$index_tab_contact]['email']);
        	    $('#contact_telephone').val($tab_contact[$index_tab_contact]['telephone']);
        	    $('#contact_fonction').val($tab_contact[$index_tab_contact]['fonction']);
        	    $('#bons_attachement_nomDuContact').val($tab_contact[$index_tab_contact]['nom']);
        	    $('#bons_attachement_emailContactClient').val($tab_contact[$index_tab_contact]['email']);
        	    $('#bons_attachement_telephoneContactClient').val($tab_contact[$index_tab_contact]['telephone']);
        	} 

			// On retire l'encart rouge qui indique que les champs sont necessaires pour l'envoi du formulaire
			if ($('#select_contact').val() != '')
            {
				$('#select_contact').removeClass('erreur_formulaire');
			}
			if ($('#bons_attachement_emailContactClient').val() != '')
            {
        		$('#bons_attachement_emailContactClient').removeClass('erreur_formulaire');
			}
			if ($('#bons_attachement_telephoneContactClient').val() != '')
            {
        		$('#bons_attachement_telephoneContactClient').removeClass('erreur_formulaire');
			}
    	});


    	$('#select_equipement').change(function()
    	{
    	    var html_nouvelles_options = '';
    	    {% for e_siteBA in es_sitesBA %}
    	        // On affiche les équipements du site selectionné ou tous les équipements si aucun site n'est sélectionné
    	        if (("{{ e_siteBA.id }}" == $(this).val()) || ($(this).val() === ''))
    	        {
    	            {% for e_equipement in e_siteBA.equipementBATickets %}
    	                // On ajout l'équipement à la liste des équipements selectionnable si celui ci n'est pas déjà sélectionné (cad présent dans le tableau tabDesEquipementsSelectionnes)
    	                if (tabDesEquipementsSelectionnes.indexOf("{{ e_equipement.id }}") == -1)
    	                {
							// Création du contenu html des Equipements
    	                    html_nouvelles_options += " \
    	                        <div id='parent_div_equipement_{{ e_equipement.id }}'> \
    	                            <div id='div_equipement_{{ e_equipement.id }}'> \
										<span style='display: inline-block; width:15px; line-height:11px; padding-bottom: 3px; text-align:center; cursor:pointer; border:1px solid red; color:red;' onClick=\"supprimeEquipement('{{ e_equipement.id  }}');\">x</span> \
    	                                <span><input    type='checkbox' \
                                                id='equipement_{{ e_equipement.id }}' \
                                                name='equipement_{{ e_equipement.id }}' \
                                                value='{{ e_equipement.id }}' \
                                                style='display:inline-block; width:50px; border:2px solid gray; cursor:pointer;' \
                                                onClick=\"deplaceEquipement('{{ e_equipement.id }}')\" \
                                            /> \
    	                                </span> \
    	                                <label style='display: inline-block; cursor:pointer;' for='equipement_{{ e_equipement.id }}'> \
    	                                    <span style='display: inline-block; width:60px;'>({{ e_equipement.numeroDeSerie }})</span> \
    	                                    <span>{{ e_equipement.denomination }}</span> \
    	                                </label> \
    	                            </div> \
    	                        </div>";
    	                } else {
    	                    // Si l'équipement est déjà sélectionné, on n'affiche que le div du paretn pour pouvoir replacer l'équipement en cas de dé sélection de celui ci
    	                    html_nouvelles_options += "<div id='parent_div_equipement_{{ e_equipement.id }}'></div>";
    	                }
    	            {% endfor %}
    	        }
    	    {% endfor %}
    	    $('#insert_equipement').html(html_nouvelles_options);
    	});
		
		// On change le format de la datepicker des équipements pour envoyer le format yy/mm/dd
        $("#date_annee_construction_equipement").datepicker( "option", "altField", "#equipement_ba_ticket_anneeDeConstruction" );
        $("#date_annee_construction_equipement").datepicker( "option", "altFormat", "yy/mm/dd" );



		// On re sélectionne les équipements précédemment selectionné après l'envoi sans sauvegarde du formulaire de bon
		{% if tab_des_id_equipements_selectionnes | length != 0 %}
			// On affiche tous les équipements pour re sélectionner les équipements sélectionnés avant l'envoi du formulaire
			$('#select_equipement').val('');
        	$('#select_equipement').change();
			{% for id_equipement in tab_des_id_equipements_selectionnes %}
				// On check les checkbox des equipements
				$('#equipement_' + "{{ id_equipement }}").prop('checked', true);
				deplaceEquipement("{{ id_equipement }}");
			{% endfor %}
			// Puis on reselectionne le site du bon pour le select equipement afin d'afficher les équipements de ce site par défaut
			$('#select_equipement').val($('#bons_attachement_site').val());
		{% endif %}

		// On affiche les équipements du site selectionné au chargement de la page
        $('#select_equipement').change();

		//


	});

    /* **************************************************************************************************   */

    /*                                      Fonctions Gestion des Equipements                               */

    /* **************************************************************************************************   */

    function gestionDesEquipements2()
    {
		// Si la selection du select de site n'est pas vide on affiche le formulaire en lui définissant le même site que celui selectionné
        if ($('#bons_attachement_site').val() != '')
		{
            $("#site_equipement option[value='" + $('#bons_attachement_site').val() + "']").prop('selected', true);
        } 
		togglePopUp(popupEquipement2);

        // On définie le site selectionné comme site selectionnée dans le select nouvel Equipement
        $('#equipement_ba_ticket_siteBA').val($('#select_equipement').val());
    }
    function retourPopupEquipement2()
    {
        $('#equipement_ba_ticket_siteBA').removeClass('erreur_formulaire');
        $('#equipement_ba_ticket_numeroDeSerie').removeClass('erreur_formulaire');
        $('#equipement_ba_ticket_denomination').removeClass('erreur_formulaire');
        $('#date_annee_construction_equipement').removeClass('erreur_formulaire');

		$('#equipement_ba_ticket_reset').trigger('click');

        togglePopUp(popupEquipement2);
    }

	function retourPopupContact2()
	{
		$('#contact_nom').removeClass('erreur_formulaire');
		$('#contact_telephone').removeClass('erreur_formulaire');
        $('#contact_mail').removeClass('erreur_formulaire');
		$('#contact_fonction').removeClass('erreur_formulaire');


		$('#contact_reset').trigger('click');

		togglePopUp(popupContact2);
	}

	function deplaceEquipement(id_checkbox)
	{
		var id_div = "div_equipement_" + id_checkbox;
		var div_tmp = $("#" + id_div);

		// Selection d'un équipement
		if ($('#' + id_div + ' input[type="checkbox"]').is(':checked'))
		{
			// On ajout d'id de l'equipement au tableau des équipements selectionnés
			tabDesEquipementsSelectionnes.push(id_checkbox);
        	// On retire l'element du div principal
        	div_tmp.remove();

        	// On ajoute l'élément au div de selection
        	$('#liste_des_equipements_selectionnes').append(div_tmp);
		// Dé selection d'un équipement
		} else {
			// On retire l'id de l'équipement du tableau des équipement selectionnés
			var indexARetirer = tabDesEquipementsSelectionnes.indexOf(id_checkbox);
			tabDesEquipementsSelectionnes.splice(indexARetirer, 1);

			// On retire l'element du div de selection
            div_tmp.remove();
			
			// On ajoute l'élément au div principal dans son conteneur parent
			$('#parent_' + id_div).append(div_tmp);
		}
	}
    /*                                              *****                                               */


	// Fonction qui ajoute un champs 'Nouveau fichier' en remplacant le label et le nom par l'index du fichier
	function ajoutChampFichier() {
		var $nouveauPrototype = $($('#bons_attachement_fichiersPdf').data('prototype').replace(/__name__label__/g, '').replace(/__name__/g, $indexFichier));

	 	// Création et ajout d'un lien de suppression en fin de container
        $deleteLink = $('<a href="#" class="mini_link">Supprimer</a>');
        $nouveauPrototype.append($deleteLink);

		$deleteLink.click(function(e){
			$nouveauPrototype.remove();
			e.preventDefault();
			return false;
		});

		// Ajout du prototype a la fin du container
		$container.prepend($nouveauPrototype);
		// Incrémentation de l'index des fichiers
		$indexFichier ++;
	}



    // Fonction qui ajoute un champs 'Nouveau fichier de site BA' en remplacant le label et le nom par l'index du fichier
    function ajoutChampFichierSiteBA() {
        var $nouveauPrototype = $($('#site_ba_fichiersJoint').data('prototype').replace(/__name__label__/g, '').replace(/__name__/g, $indexFichierSiteBA));

        // Création et ajout d'un lien de suppression en fin de container
        $deleteLink = $('<a href="#" class="mini_link">Supprimer</a>');
        $nouveauPrototype.append($deleteLink);

        // Ajout du listener permettant la suppression du champ fichier lors du clic sur le lien
        $deleteLink.click(function(e){
            $nouveauPrototype.remove();
            e.preventDefault();
            return false;
        });

        // Ajout du prototype a la fin du container
        $container_site.prepend($nouveauPrototype);
        // Incrémentation de l'index des fichiers
        $indexFichierSiteBA ++;
    }


	function ajoutMarqueur($infosCoordonnees) {
		var $objPos = {};
		var $coordonnees = $infosCoordonnees.match(/latLng\((.+?),(.+?)\)/);
		if ($coordonnees != null)
		{
			$objPos.lat = parseFloat($coordonnees[1]);
        	$objPos.lng = parseFloat($coordonnees[2]);
		
			/* Création du marqueur */
        	monMarqueur = new google.maps.Marker({
        	    position: $objPos,
        	    map: maCarte
        	});

			/* Placement du marqueur sur la carte */
        	maCarte.setZoom(19);
        	maCarte.setCenter(monMarqueur.getPosition());
        	maCarte.setMapTypeId('satellite');
		}
	}




   	// Fonction qui ajoute un champs 'Contact au site BA' 
   	function ajoutChampContactSiteBA() 
	{
		// L'identifiant du nouveau champs sera : site_ba_contacts_$indexContactSiteBA_date_maj
        var $nouveauPrototype = $($('#site_ba_contacts').data('prototype').replace(/__name__label__/g, '').replace(/__name__/g, $indexContactSiteBA));

        // Création et ajout d'un lien de suppression en fin de container
        $deleteLink = $('<a href="#" class="mini_link">Supprimer</a>');
        $nouveauPrototype.append($deleteLink);

        // Ajout du listener permettant la suppression du champ fichier lors du clic sur le lien
        $deleteLink.click(function(e)
		{
            $nouveauPrototype.remove();
            e.preventDefault();
            return false;
        });

		// On place le nouveau champs input
		$container_new_contact = $('#container_new_contact');
		$container_new_contact.prepend($nouveauPrototype);

		// On indique les valeur par défaut des champs obligatoire
		var $today = new Date();	
		var $val_today = $today.getDate() + '/' + ($today.getMonth() + 1) + '/' +  $today.getFullYear();
		$('#site_ba_contacts_' + $indexContactSiteBA + '_date_maj').val($val_today);
		$('#site_ba_contacts_' + $indexContactSiteBA + '_fonction').val('Contact');
		$('#site_ba_contacts_' + $indexContactSiteBA + '_prenom').val('-');

		// On met en place l'activation js pour l'affichage du calendrier
        setDatePicker();

        // Ajout du prototype a la fin du container
        //$container_contact.prepend($nouveauPrototype);
        // Incrémentation de l'index des contacts
        $indexContactSiteBA ++;
    }



	function ficheContactPourImpression($index_tab_contact)
	{
		var $container = $($("#bloc_contact_pour_impression"));
		var $html = '';
		if (($tab_contact[$index_tab_contact]['prenom'] != '') && ($tab_contact[$index_tab_contact]['prenom'] !=  null) && ($tab_contact[$index_tab_contact]['prenom'] != '-'))
        {
 			$html += capitalize($tab_contact[$index_tab_contact]['prenom']) + ' ';
		}
		$html += capitalize($tab_contact[$index_tab_contact]['nom']);
		if (($tab_contact[$index_tab_contact]['email'] != '') && ($tab_contact[$index_tab_contact]['email'] != null))
		{
			$html += ' - ' + $tab_contact[$index_tab_contact]['email'];
		}
		if (($tab_contact[$index_tab_contact]['telephone'] != '') && ($tab_contact[$index_tab_contact]['telephone'] != null))
        {
            $html += ' : ' + $tab_contact[$index_tab_contact]['telephone'];
		}
		$html += " ( " + $tab_contact[$index_tab_contact]['fonction'] + " )<br />";
		$container.append($html);	
	}


	// Active le datepicker sur tous les input ayant le placeholder à 'dd/mm/YYYY'
	function setDatePicker() 
	{
		$("input[placeholder='dd/mm/YYYY']").datepicker(); 
	}


	function resetInfosContact() 
	{
        /* On réinitialise les valeurs de la fiche client et du contact associé au bon */
        $('#contact_id').val('');
        $('#contact_nom').val('');
        $('#contact_prenom').val('');
        $('#contact_mail').val('');
        $('#contact_telephone').val('');
        $('#contact_fonction').val('');
        $('#bons_attachement_nomDuContact').val('');
        $('#bons_attachement_emailContactClient').val('');
		$('#bons_attachement_telephoneContactClient').val('');

		$($("#bloc_contact_pour_impression")).html('');
	}


	function resetInfosSite()
	{
        $('#site_ba_intitule').attr('readonly', false);
        $('#site_ba_lienGoogle').attr('readonly', false);
        $('#id_site_ba').val('');
        $('#fichiers_deja_joints').html('');
        $('#fichiers_deja_joints2').html('');
        $('#contacts_deja_associes').html('');
        $('#titre_nouveau_siteBA').text('Nouveau site');

		$('#equipements_deja_joints').html('');
	}



	function supprimerContact() 
	{
        $url_supp = "{{ path('lci_ajax_bon_contact_supp') }}";
        $id_contact_supp = $('#idContact').val();
        $.ajax({
            url: $url_supp,
            method: "post",
            data: {'id_contact_supp':$id_contact_supp},
            success: function(msg)
            {
				$('#bons_attachement_site').trigger('change');
            }
        });
	}


	function modifierContact()
	{
		if (checkValidationContactBeforeSend() === true)
		{
			// Fermeture de la popup contact 
			togglePopUp(bonsNouveauContact);

			var $refreshContact;
			$url_modif 			= "{{ path('lci_ajax_bon_contact_modif') }}";
			$id_contact_modif 	= $('#idContact').val();
			$nom 				= $('#nomContact').val();
			$prenom 			= $('#prenomContact').val();
        	$email 				= $('#emailContact').val();
			$tel 				= $('#telephoneContact').val();
			$fonction 			= $('#fonctionContact').val();

			// On sauvegarde la valeur de l'option du contact selectionné pour le reselectionner après modification
			$opt_select_contact_val = $('#select_contact').val();
			$.ajax({
				url: $url_modif,
				method: "post",
				data: {'id_contact_modif':$id_contact_modif, 'nomContact':$nom, 'prenomContact':$prenom, 'telephoneContact':$tel, 'emailContact':$email, 'fonctionContact':$fonction},
				success: function(msg)
				{
					// Après la modification d'un contact on réaffiche le site
					$('#bons_attachement_site').trigger('change');
					$refreshContact = setInterval(function() 
					{
						if ($changeEnCours == false)
						{
							$('#select_contact').val($opt_select_contact_val);
							$('#select_contact').trigger('change');
							clearInterval($refreshContact);
						}
					}, 2);
				}
			});	
		}
	}

	// Fonction d'ajout fichier
	var imageId = 0;
	var baseFiles = [];

	$("#add-fichierBon").on("click", () => {
		$("#fichierBon").click();
	});
	$("#add-equipBon").on("click", () => {
		$("#equipBon").click();
	});

	$('.file-input').change(function (e) {
		var input = e.target;
		var files = input.files;
		var images = $('.images');

		for (var i = 0; i < files.length; i++) {
			imageId++;

			((file) => {
				var reader = new FileReader();
				var fileName = file.name.replace(/\.[^.]*$/, ''); // without file extension
				var fileId = file.size + imageId;
				var baseFile = '';

				reader.onload = (e) => {
					var preview = '<div class="image image_' + i + '" data-id="' + fileId + '">' +
						'<div class="img"><img src="' + e.target.result + '"></div>' +
						'<button class="btn remove">Remove</button>' +
						'</div>';
					images.append(preview);

					baseFile = reader.result;

					baseFiles.push({
						id: fileId,
						name: file.name,
						file: baseFile,
						uploaded: 0
					});
				}

				reader.readAsDataURL(file);
			})(files[i]);
		}

		console.log('after upload :>> ', baseFiles);
	});

	$(document).on('click', '.remove', function (e) {
		e.preventDefault();

		var parent = $(this).parent();
		var id = parent.data('id');
		var removeIndex = baseFiles.map(function (item) {
			return item.id;
		}).indexOf(id);

		baseFiles.splice(removeIndex, 1);
		parent.remove();
		console.log('after remove :>> ', baseFiles);
		// var myJSON = JSON.stringify(baseFiles);
		// $('.files-text').val(myJSON);
	});


    function gestionDesContacts2()
    {
        // Si la selection du select de site n'est pas vide on affiche le formulaire en lui définissant le même site que celui selectionné
        if ($('#bons_attachement_site').val() != '')
        {
            $("#contact_siteBA option[value='" + $('#bons_attachement_site').val() + "']").prop('selected', true);
        }

		// Si le select de contact n'est pas vide on recherche les informations liés au contact pour pré remplir le formulaire de contact
		if ($('#select_contact').val() != '')
		{
			$('#select_contact').trigger('change');
		}
        togglePopUp(popupContact2);
    }


    function gestionDesFichiers()
    {
        // Si la selection du select de site n'est pas vide
        if ($('#bons_attachement_site').val() === '')
        {
			$('#bons_attachement_site').css('border', '2px solid red');
        } else {
			ajoutNouveauFichier();
		}
    }
    function ajoutNouveauFichier() {
        // On cache les informations liés à la modification d'un site
        $('#site_ba > fieldset').addClass('cacher');
        //$('#ajout_fichier_siteBA_mobile_portrait').addClass('cacher');
        $('#titre_nouveau_siteBA').text('Nouveau(x) contact(s)');
        $('#contacts_deja_associes').addClass('cacher');

        // Ouverture de la popup Modification du site
        $('#bntBonsSite').trigger('click');

        // Activation du lien vers nouveau fichier
        $('#add_fichier_site').trigger('click');
    }


	// Click sur le bouton RETOUR de la popup nouveau site
	function retourPopupSite()
	{
		togglePopUp(bonsSite);
		// Simulation click sur le premier lien supprimer pour enlever l'encart nouveau contact
		$('#container_new_contact a.mini_link').trigger('click');

		$('#site_ba > fieldset').removeClass('cacher');
		$('#ajout_fichier_siteBA_mobile_portrait').removeClass('cacher');
		$('#contacts_deja_associes').removeClass('cacher');

		//$('#titre_nouveau_siteBA').text('Nouveau Site');
		if ($('#bons_attachement_site').val() === '')
		{
			$('#titre_nouveau_siteBA').text('Nouveau site');
		} else {
			$('#titre_nouveau_siteBA').text('Modification du site');
		}
	}


   	var sauvegarde_select_user = $('#bons_attachement_user').html();
    // Envoi du service selectionné
    // Récupération des ids des membres du service
    // Cache les non membre du service du select html
    $('#bons_attachement_service').change(function() {
        // Lors d'un changement de choix de service : On redéfini le select d'origin pour supprimer toutes les classes cacher
        $('#bons_attachement_user').html(sauvegarde_select_user);

        $.ajax("{{ path('lci_ajax_bons_select_service') }}",
        {
            async: false,
            method: "POST",
            data: {service:$('#bons_attachement_service option:selected').text() },
            success: function(data, textStatus, jqXHR) {
                // Lors du retour de la demande Ajax, soit on récupère un tableau avec les id des membres du service soit on recoit une chaine de caractère vide
                // Si on recoit la chaine de c. on ne fait pas de changement au tableau des intervenants
                if (data != '') {
                    var t_data = JSON.parse(data);
                    $('#bons_attachement_user option').each(function(){
                        if (($.inArray(parseInt($(this).prop('value')), t_data) == -1) && ($(this).prop('value') != ''))
                        {
                            $(this).addClass('cacher');
                        }
                    });
                    // Selection de l'option par défaut pour l'intervenant (Choix de l'intervenant)
                    $('#bons_attachement_user option[value=""]').prop('selected', true);
                }
            },
            error: function(jqXHR, textStatus, errorThrown) {
                console.log('error');
            }
        });
    });

	function checkValidationBeforeSend()
	{
		var $send_form = true;

		// On vérifie la selection d'un site
		if ($('#bons_attachement_site').val() === '')
		{
			$('#bons_attachement_site').addClass('erreur_formulaire');
			$send_form = false;
		}

		// On vérifie l'ajout du numero d'affaire
		if ($('#bons_attachement_numeroAffaire').val() === '')
        {
			$('#bons_attachement_numeroAffaire').addClass('erreur_formulaire');
			$send_form = false;
		}

		// On vérifie qu'un intervenant est selectionné
		if ($('#bons_attachement_user').val() === '')
		{ 
			$('#bons_attachement_user').addClass('erreur_formulaire');
			$send_form = false;
		} 

		// On vérifie la selection d'un contact
		if ($('#select_contact').val() === '')
		{
			$('#select_contact').addClass('erreur_formulaire');
			$send_form = false;
		}

		// On vérifie que pour le contact selectionné, il y a soit un email soit un téléphone
		if (($('#bons_attachement_emailContactClient').val() === '') && ($('#bons_attachement_telephoneContactClient').val() === ''))
		{
			$('#bons_attachement_emailContactClient').addClass('erreur_formulaire');
			$('#bons_attachement_telephoneContactClient').addClass('erreur_formulaire');
            $send_form = false;
		}

		if ($send_form === true)
		{
			attendreRechargement();
			$('#enregistrement').val("oui");
			document.forms['myForm'].submit(); 
		}
	}

	function resetCheck()
    {
		$('#bons_attachement_site').removeClass('erreur_formulaire');
		$('#bons_attachement_numeroAffaire').removeClass('erreur_formulaire');
		$('#bons_attachement_user').removeClass('erreur_formulaire');
		$('#select_contact').removeClass('erreur_formulaire');
		$('#bons_attachement_emailContactClient').removeClass('erreur_formulaire');
		$('#bons_attachement_telephoneContactClient').removeClass('erreur_formulaire');
	}



    function checkValidationContactBeforeSend()
    {
        var $send = true;

        if ($('#nomContact').val() === '')
        {
            $('#nomContact').addClass('erreur_formulaire');
			$send = false;
        }
        if ($('#prenomContact').val() === '')
        {
            $('#prenomContact').addClass('erreur_formulaire');
            $send = false;
        }
        if (($('#emailContact').val() === '') && ($('#telephoneContact').val() === ''))
        {
            $('#emailContact').addClass('erreur_formulaire');
			$('#telephoneContact').addClass('erreur_formulaire');
            $send = false;
        }
		if ($('#fonctionContact').val() === '')
        {
            $('#fonctionContact').addClass('erreur_formulaire');
            $send = false;
        }

		return $send;
    }

	function supprimeFile($idFile)
	{
		console.log("demande de suppression du fichier d'id : " + $idFile);
		$.ajax({
			url: "{{ path('lci_ajax_bons_del_file') }}",
			data: {'id_file':$idFile },
			success: function(msg)
			{
				console.log('fichier supprimé - A Supprimer aussi du HTML : ' + msg);
			},
            error: function(status, msg, tri) {
                alert('error ' + msg + tri);
            }
		});
	}

	function refreshSelectEquipements()
	{
		// On défini le même site sur le select des équipements que le site sélectionné
		$('#select_equipement').val($('#bons_attachement_site').val());

		// On affiche la liste des équipements associés au nouveau site sélectionné
		$('#select_equipement').change();
	}


	function supprimeEquipement($idEquipement)
	{
		attendreRechargement();

		// On s'assure qu'il n'y a pas de check sur la checkbox de l'équipement à supprimer pour ne pas l'envoyer dans le formulaire de création de bon
		$('#equipement_' + $idEquipement).prop('checked', false);
        // Suppression de l'équipement en ajax et
        // Réaffichage de la page pour prendre en compte la suppression
		$.ajax({
			url: "{{ path('lci_ajax_bon_del_equipement') }}",
			data : {'id_equipement':$idEquipement },
			method: "POST",
            success: function(msg)
            {
				document.forms['myForm'].submit(); 
            },
            error: function(status, msg, tri) {
                alert('error ' + msg + tri);
            }
		});
	}


	function creerContact2() 
	{
		var $send_form = true;


		// Vérification des chmaps du contact
		if($('#contact_nom').val() === '')
        {
            $('#contact_nom').addClass('erreur_formulaire');
			$send_form = false;	
        }
		if( ($('#contact_telephone').val() === '') && ($('#contact_mail').val() === '') )
		{
			$('#contact_telephone').addClass('erreur_formulaire');
			$('#contact_mail').addClass('erreur_formulaire');
			$send_form = false;
		}
		if($('#contact_fonction').val() === '')
        {
            $('#contact_fonction').addClass('erreur_formulaire');
            $send_form = false;
        }

		// Si la vérification est ok (pas de champs obligatoire vides) : Envoi du formulaire 
		if ($send_form === true)
		{
			attendreRechargement();

        	$.ajax({
        	    url: "{{ path('lci_ajax_siteba_new_contact') }}",
        	    method: "POST",
        	    data: $('form[name="contact"]').serialize(),
        	    success: function(output, status, xhr)
        	    {
        	        try {
        	            // On recoit une réponse ajax : Le contact a été enregistré
        	            data = JSON.parse(output);
						$('#contact_reset').trigger('click');
                        retourPopupContact2();
                        // Rechargement de la page
                        document.forms['myForm'].submit();
        	        } catch(e) {
        	            // On ne recoit pas une réponse Ajax : on recoit donc le formulaire HTML avec les erreurs
        	            var form_html = output;
        	            $('#popupContact2').html(form_html);
        	        }
        	    },
        	    error: function (xhr, status, st_text)
        	    {
        	        console.log('error');
        	    }
        	});
		}
	}

    function creerEquipement2()
    {
        $send_form = true;

        // On valide les informations entrées pour l'équipement
        // Présence d'un site
        var $new_site = $('#equipement_ba_ticket_siteBA').val();
        if ($new_site == '')
        {
            $('#equipement_ba_ticket_siteBA').addClass('erreur_formulaire');
			$send_form = false;

        }

        // Présence du numéro de série
        var $new_numero_de_serie = $('#equipement_ba_ticket_numeroDeSerie').val();
        if ($new_numero_de_serie == '')
        {
            $('#equipement_ba_ticket_numeroDeSerie').addClass('erreur_formulaire');
			$send_form = false;
        }

        //Présence d'une dénomination
        var $new_denomination = $('#equipement_ba_ticket_denomination').val();
        if ($new_denomination == '')
        {
            $('#equipement_ba_ticket_denomination').addClass('erreur_formulaire');
			$send_form = false;
        }

        //Présence d'une autre dénomination (non obligatoire)
        var $new_autre_denomination = $('#equipement_ba_ticket_autreDenomination').val();

        // Présence d'une date d'initialisation
        var $new_annee_de_contruction = $('#equipement_ba_ticket_anneeDeConstruction').val();
        if ($new_annee_de_contruction == '')
        {
            $send_form = false;
            $('#date_annee_construction_equipement').addClass('erreur_formulaire');
        }

        if ($send_form == true)
        {
			attendreRechargement();

            // Appel ajax
            $.ajax({
                url: "{{ path('lci_ajax_bon_new_equipement') }}",
                method: "POST",
				data: $('form[name="equipement_ba_ticket"]').serialize(),
                success: function(output, status, xhr)
                {
                    try {
                        // On recoit une réponse ajax : L'équipement a été enregistré
                        data = JSON.parse(output);
						$('#equipement_ba_ticket_reset').trigger('click');
						retourPopupEquipement2();

						// Rechargement de la page
						document.forms['myForm'].submit();	
                    } catch(e) {
                        // On ne recoit pas une réponse Ajax : on recoit donc le formulaire HTML avec les erreurs
                        var form_html = output;
                        $('#popupEquipement2').html(form_html);
						// Activation du datepicker pour le nouveau formulaire
						setDatePicker();
						// On défini l'input affiché comme source pour l'input du formulaire : Permet d'afficher un format fr et d'envoyer un format  pour la date
        				// On change le format de la datepicker des équipements pour envoyer le format yy/mm/dd
        				$("#date_annee_construction_equipement").datepicker( "option", "altField", "#equipement_ba_ticket_anneeDeConstruction" );
        				$("#date_annee_construction_equipement").datepicker( "option", "altFormat", "yy/mm/dd" );
                    }
                },
                error: function (xhr, status, st_text)
                {
                    console.log('error');
                }
            });
        }
    }
</script>



{# lien vers api autocompletion de google #}
<script src="https://maps.googleapis.com/maps/api/js?key={{ apiKey }}&libraries=places&callback=initAutocomplete"  async defer></script> 

{% endblock javascript %}
