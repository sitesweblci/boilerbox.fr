{# src/Lci/BoilerBoxBundle/Resources/views/Bons/form_saisie_bons.html.twig #}

{% extends "LciBoilerBoxBundle::secondBonsLayoutLogged.html.twig" %}


{% block meta_viewport %}
    <meta name="viewport" content="width=device-width, initial-scale=0.5, shrink-to-fit=no">
{% endblock meta_viewport %}


{% block boilerBoxCSS %}
    {{ parent() }}
	<link rel="stylesheet" type="text/css" href="{{ asset('bundles/lciboilerbox/css/saisie_ba.css') }}" media='screen' />
	<link rel="stylesheet" type="text/css" href="{{ asset('bundles/lciboilerbox/css/saisie_ba_print.css') }}" media='print' />
	<style>
	.sub-header__title{
		margin-bottom: 18px;
	}
	.form__btn--col{
		width: 100%;
		max-width: initial;
	}
	*::placeholder{
		color: #646464 !important;
		font-size: 9pt;
	}
	</style>
{% endblock boilerBoxCSS %}


{% block title %}{{ parent() }} : Bons d'interventions{% endblock title %}
{% block class_menu_boiler %} elargir {% endblock class_menu_boiler %}
{% form_theme form 'templates/form/fields.html.twig' %}

{% block mainBody %}


<input type='hidden' name='id_contact' id='idContact'>

<header class="sub-header sub-header--grey">
	<h1 class="sub-header__title">Bons d'interventions</h1>
</header>
<div class="tab-wrapper">
	<ul class="tab-wrapper__tabs">
		<li class="tab-wrapper__tabs__tab active" data-tab-target="#nouveauBon">Nouveau Bon</li>
		<li class="tab-wrapper__tabs__tab" data-tab-target="#nouveauSite">Nouveau Site</li>
		<li class="tab-wrapper__tabs__tab" data-tab-target="#ficheContact">Fiche Contact</li>
	</ul>
	<div class="tab-wrapper__content">
		<section id="nouveauBon" class='active{# inter_bloc_2_1 #}' data-tab-content>
			<h3 class="form__field__title"></h3>

        	{{ form_start(form, {'action':path('lci_bons_saisie'), 'method':'POST', 'name':'myForm', 'id':'myForm', 'class':'form' }) }}
   			{{ form_errors(form) }}
	   			<div class="form__field">
					{{ form_label(form.userInitiateur) }}
					{{ form_widget(form.userInitiateur) }}
					{{ form_errors(form.userInitiateur) }}
				</div>
	   			<div class="form__field">
		    		{{ form_label(form.dateInitialisation) }}
		    		{{ form_widget(form.dateInitialisation) }}
		    		{{ form_errors(form.dateInitialisation) }}
		    	</div>
		    	<div class="form__field">
		    		{{ form_label(form.user) }}
					{{ form_widget(form.user) }}
					{{ form_errors(form.user) }}
		    	</div>
		    	<div class="form__field">
		    		{{ form_label(form.numeroBA) }}
					{{ form_widget(form.numeroBA) }}
					{{ form_errors(form.numeroBA) }}
		    	</div>
		    	<div class="form__field">
		    		{{ form_label(form.site) }}
					{{ form_widget(form.site) }}
					{{ form_errors(form.site) }}
		    	</div>
		    	<div class="form__field">
		    		{{ form_label(form.numeroAffaire) }}
					{{ form_widget(form.numeroAffaire) }}
					{{ form_errors(form.numeroAffaire) }}
		    	</div>
		    	<div class="form__field form__field--double">
		    		<div>
		    			{{ form_label(form.dateDebutIntervention) }}
						{{ form_widget(form.dateDebutIntervention) }}
						{{ form_errors(form.dateDebutIntervention) }}
		    		</div>
		    		<div>
		    			{{ form_label(form.dateFinIntervention) }}
		    			{{ form_widget(form.dateFinIntervention) }}
		    			{{ form_errors(form.dateFinIntervention) }}
		    		</div>
		    	</div>
		    	<div class="form__field">
		    		{{ form_errors(form.nomDuContact) }}
		    		{{ form_label(form.nomDuContact) }}
		    		{{ form_widget(form.nomDuContact) }}
		    	</div>
		    	<div class="form__field">
		    		{{ form_errors(form.nomDuContact) }}
		    		{{ form_label(form.emailContactClient) }}
		    		{{ form_widget(form.emailContactClient) }}
		    	</div>
		    	<div class="form__field">
		    		{{ form_errors(form.dateSignature) }}
		    		{{ form_label(form.dateSignature) }}
					{{ form_widget(form.dateSignature) }}
		    	</div>
				<div class='{# nouveau_probleme_ligne #} form__field'>
					<label class="flex flex--row" style="display:flex!important;">
						{{ form_label(form.fichiersPdf) }}
						<span class="sous_label_fichier">&nbsp;({{ max_upload_size }}o max) : </span>
					</label>
					<span id='lien_ajout_fichier'></span>
					<div id='champ_ajout_fichiers_bon'>
						{{ form_widget(form.fichiersPdf) }}
						{{ form_errors(form.fichiersPdf) }}
					</div>
				</div>
			{{ form_rest(form) }}
			{{ form_end(form) }}
    			
			<div class='{# validation_formulaire_centre #} notToBePrinted form__btn form__btn--col'>
    	   		<button onClick="attente(); document.forms['myForm'].submit(); return false;" class="btn_menu btn btn--main btn--wide" >Valider</button>
				<a href="{{ path('lci_bons_attachements') }}" class="btn btn--second btn--wide">Retour</a>
    		</div>
		</section>
	
		<section id="nouveauSite" data-tab-content>
			<h3 id='titre_nouveau_siteBA' class="form__field__title"></h3>
			
			<div class="form__field flex flex--row flex--between"{# id='impression_fiche_site' #}>
				<a href='https://goo.gl/maps/RG2zoSZrbis8vsqj6' target='google' class="link txt--left">{# <span style='color:green; text-decoration:underline'> #}Accès Google Map{# </span> #}</a>
            	<div class='{# validation_impression #} tooltip-wrapper notToBePrinted' style="margin:0;">
            	    <img onClick="attente(); window.print(); return false;" alt="Valider" src="{{ asset('bundles/lciboilerbox/images/actions/imprimer.svg') }}" style="width:20px;height:20px;cursor:pointer;"/>
            	    <span class="tooltip">Imprimer</span>
            	</div>
			</div>

			{{ form_start(form_site, {attr: {'id': 'site_ba', 'class':'form' }}) }}
			{{ form_errors(form_site) }}
				<input type='hidden' name='id_site_ba' id='id_site_ba' />


				<div class="form__field">
					{{ form_label(form_site.intitule) }}
					{{ form_widget(form_site.intitule) }}
				</div>
				<div class="form__field">
					{{ form_label(form_site.adresse) }}
					{{ form_widget(form_site.adresse) }}
					{{ form_errors(form_site.adresse) }}
				</div>
				<div class="form__field">
					{{ form_label(form_site.lienGoogle) }}
					{{ form_widget(form_site.lienGoogle) }}
					{{ form_errors(form_site.lienGoogle) }}
				</div>
				<div class="form__field">
					{{ form_label(form_site.informationsClient) }}
					{{ form_widget(form_site.informationsClient) }}
					{{ form_errors(form_site.informationsClient) }}
				</div>
				<div class="form__field">
					{{ form_label(form_site.contacts) }}
					{{ form_widget(form_site.contacts) }}
					{{ form_errors(form_site.contacts) }}
				</div>
                <div id="ajout_contact" class='{# ajout_contact #} form__field'>
                	<div class='ligne_error'>{{ form_errors(form_site.contacts) }}</div>
                	<div class='nouveau_probleme_ligne form__field'>
                		<div>
                			<span style='font-size:12px'></span>
                			<div id='contacts_deja_associes' style='font-size:12px; font-style:italic; line-height:1.6; max-height:100px; width:400px; overflow:auto'></div>
                			<span id='lien_ajout_contact'></span>
                			<div id='container_new_contact' style='overflow:auto;'></div>
                				
                		</div>
                	</div>
                	<div class='form__field'>
                		<div id='champ_ajout_fichiers_siteBA'>
                			{{ form_widget(form_site.fichiersJoint) }}
                		</div>
                	</div>
                	<div id="ajout_fichier_siteBA_mobile_portrait" class='ajout_fichier_joint'>
                		<div class='ligne_error'></div>
                		<div class='form__field'>
                			<label class="flex flex--row" style="display:flex!important;">
                				{{ form_label(form_site.fichiersJoint) }}
                				<span class="sous_label_fichier">&nbsp;({{ max_upload_size }}o max) : </span>
                			</label>
                			<div id='fichiers_deja_joints' style='font-size:12px; font-style:italic; line-height:1.6;'></div>
                			<span id='lien_ajout_fichier_siteBA'></span>
                		</div>
                		<div class='form__field'>
                			<div id='champ_ajout_fichiers_siteBA'>
                				{{ form_widget(form_site.fichiersJoint) }}
                				{{ form_errors(form_site.fichiersJoint) }}</div>
                		</div>
                	</div>
                </div>
                <div id='encart_fichiers_siteBA'></div>
            {{ form_rest(form_site) }}
			{{ form_end(form_site) }}

			<div id="bloc_contact_pour_impression">
			</div>

   		   	<div class='{# validation_formulaire_centre #}form__btn form__btn--col notToBePrinted'>
       	   		<button onClick="attente(); document.forms['site_ba'].submit(); return false;"class="btn_menu btn btn--main btn--wide">Valider</button>
       	   		<a href="{{ path('lci_bons_attachements') }}" class="btn btn--second btn--wide">Retour</a>
       		</div>
		</section>

		<section id="ficheContact" class='{# inter_bloc_2_2 #}' data-tab-content>
			<input type='hidden' id='indexContact'>
    		<div id='bloc_ajout_contact'>
    		    <h3 class="form__field__title">
    		    	<span class='titre'>Fiche Contact </span>
    		    	<span>(mise à jour le </span><span><input type='text' name='dateMajContact' id='dateMajContact'></span><span> )</span>
    		    </h3>

    		    <div class="form__field">
    		    	<label>Nom</label>
    		    	<input type='text' name='nomContact' id='nomContact'>
    		    </div>
    		    <div class="form__field">
    		    	<label>Prénom</label>
    		    	<input type='text' name='prenomContact' id='prenomContact'>
    		    </div>
    		    <div class="form__field">
    		    	<label>Mail</label>
    		    	<input type='text' name='emailContact' id='emailContact'>
    		    </div>
    		    <div class="form__field">
    		    	<label>Téléphone</label>
    		    	<input type='text' name='telephoneContact' id='telephoneContact'>
    		    </div>
    		    <div class="form__field">
    		    	<label>Fonction</label>
    		    	<input type='text' name='fonctionContact' id='fonctionContact'>
    		    </div>
				<div class='{# validation_formulaire_fiche_client #}form__btn form__btn--col notToBePrinted'>
            	    <button onClick="attente(); modifierContact(); return false;" class="btn_menu btn btn--main btn--wide">Modifier</button>
                    <button onClick="attente(); supprimerContact(); return false;" class="btn_menu btn btn--delete btn--wide">Supprimer</button>
                    <div id='map'></div>
                    <a href="{{ path('lci_bons_attachements') }}" class="btn btn--second btn--wide">Retour</a>
                </div>
	    	</div>
		</section>
	</div>
</div>
{% endblock mainBody %}

{% block javascript %}
	{# Script d'autocompletion de l'adresse #}
    <script type='text/javascript'>

	// Fonction style barre de navigation page active
    $(window).on('load', function pageActive(){
    	$('.side-nav .bons-interv').addClass('active');
    });

    const tabs = document.querySelectorAll('[data-tab-target]')
    const tabContents = document.querySelectorAll('[data-tab-content]')

    tabs.forEach(tab => {
        tab.addEventListener('click', () => {
            const target = document.querySelector(tab.dataset.tabTarget)
            tabContents.forEach(tabContent => {
                tabContent.classList.remove('active')
            })
            tabs.forEach(tab => {
                tab.classList.remove('active')
            })
            tab.classList.add('active')
            target.classList.add('active')
        })
    });

	var maCarte;
	var changeEnCours;

    function initAutocomplete(){
		var monMarqueur;

        maCarte = new google.maps.Map(document.getElementById('map'), {
            center: {lat: 50.474, lng: 2.97118},
            zoom: 4,
            mapTypeId: 'roadmap'
        });

        /* Mise en place du textbox dans la carte */
        var input = document.getElementById('site_ba_adresse');

        var autocomplete = new google.maps.places.Autocomplete(input);
		autocomplete.setFields(['place_id', 'geometry']);


		/* Placement du marqueur sur l'emplacement selectionné */
        maCarte.addListener('click', function(e){
			if (monMarqueur != null) {
				monMarqueur.setMap(null);
			}
			monMarqueur = new google.maps.Marker({
				position: e.latLng,
				map: maCarte,
				icon: 'http://maps.google.com/mapfiles/kml/paddle/blu-circle.png'
			});
			maCarte.setZoom(19);
			maCarte.setCenter(monMarqueur.getPosition());
			maCarte.setMapTypeId('satellite');

			
			/* Service de geocoding pour récupérer l'adresse du lieu selectionné par la souris */
			/* On ne modifie que l'url en fonction du marqueur */
			geocoder = new google.maps.Geocoder();
			geocoder.geocode({'location':monMarqueur.getPosition()}, function(results, status) {
				if (status == 'OK') {
					$('#site_ba_lienGoogle').val('latLng' + monMarqueur.getPosition());
					/*$('#site_ba_adresse').val(results[0].formatted_address);*/
					$('#site_ba_lienGoogle').attr('readonly', true);
				} else {
					alert('Aucune adresse trouvée pour le lieu selectionné');
				}
			});
        });


        autocomplete.addListener('place_changed', function() {
            var place = autocomplete.getPlace();
			if (place.geometry) {
				maCarte.panTo(place.geometry.location);
				maCarte.setZoom(19);
				maCarte.setMapTypeId('satellite');
            	monMarqueur = new google.maps.Marker({
                    position: place.geometry.location,
                    map: maCarte
            	});
			}
			$('#site_ba_lienGoogle').val('latLng' + place.geometry.location);
			$('#site_ba_lienGoogle').attr('readonly', true)
		});

		$('#site_ba_lienGoogle').on('change', function() {
			var $objPos = {};

			var $position = $('#site_ba_lienGoogle').val();
			// Si la coordonnée est retournée par l'outil de google map On zoom sur le lieu de l'adresse selectionnée
			// Sinon si l'adresse provient du site web google map, on extrait les coordonnées
			var $coordonnees = $position.match(/latLng\((.+?),(.+?)\)/);
			if ($coordonnees == null) 
			{
				geocoder = new google.maps.Geocoder();
				var $adresse = 'https://maps.googleapis.com/maps/api/geocode/json?address=' + $('#site_ba_lienGoogle').val() + '&key=' + "{{ apiKey }}";
				$.ajax({
					url: $adresse,
					method: "get",
					success: function(msg) {
						$objPos.lat = msg['results'][0]['geometry']['location']['lat'];
						$objPos.lng = msg['results'][0]['geometry']['location']['lng'];
						maCarte.setCenter($objPos);
						maCarte.setZoom(19);
						maCarte.setMapTypeId('satellite');
						monMarqueur = new google.maps.Marker({
            				position: $objPos,
            				map: maCarte
        				});
						$latLng = 'latLng(' + $objPos.lat + ',' + $objPos.lng + ')';
                        $('#site_ba_lienGoogle').val($latLng);
					}
				});
			} else {
				$objPos.lat = parseFloat($coordonnees[1]);
				$objPos.lng = parseFloat($coordonnees[2]);
        		maCarte.setCenter($objPos);
				maCarte.setZoom(19);
				maCarte.setMapTypeId('satellite');
			}
		});
    }


	var $indexFichier = 1;
	var $indexFichierSiteBA = 1;
	var $indexContactSiteBA = 1;
	var $container;
	var $container_site;
	var $container_contact;

	var $tab_contact = new Array();

	$(document).ready(function() 
	{
		$('#bons_attachement_nomDuContact').prop('readonly', true);
		$('#bons_attachement_emailContactClient').prop('readonly', true);

		/* Mise en place de l'objet datepicker avec 2 mois affichés */
        $.datepicker.setDefaults({
            numberOfMonths: 1,
            dateFormat: 'dd/mm/yy',
            showWeek: true,
            gotoCurrent: true,
            changeMonth: true,
			changeYear: true,
			monthNamesShort: [ "Janvier", "Fevrier", "Mars", "Avril", "Mai", "Juin", "Juillet", "Aout", "Septembre", "Octobre", "Novembre", "Decembre" ],
            showAnim: "fold",
			minDate: 'today',
            maxDate: '+2Y'
        });

		setDatePicker();
		

		/* Récupération du container contenant l'attribut data-prototype */
		$container = $('#bons_attachement_fichiersPdf');
		/* Récupération du container des fichiers des SitesBA */
		$container_site = $('#encart_fichiers_siteBA'); //$('#site_ba_fichiersJoint');
        /* Récupération du container des contacts des SitesBA */
        $container_contact = $('#site_ba_contacts');

	

        /* Lien permettant l'ajout d'un nouveau contact au site */
        var $addLinkContact = $('<a href="#" id="add_contact" class="small_link">Ajouter un contact</a>');
		/* Lien permettant l'ajout d'un nouveau fichier au bon */
		var $addLink = $('<a href="#" id="add_fichier" class="small_link">Ajouter un fichier</a>');
		/* Lien permettant l'ajout d'un nouveau fichier au site */
		var $addLinkFichierSiteBA = $('<a href="#" id="add_fichier_site" class="small_link">Ajouter un fichier</a>');


		/* Ajout du lien dans la div du container */
		$('#lien_ajout_fichier').html($addLink);
		/* Ajout du lien dans la div du container de fichiers des sites */
		$('#lien_ajout_fichier_siteBA').html($addLinkFichierSiteBA);
        /* Ajout du lien dans la div du container de contact des sites */
        $('#lien_ajout_contact').html($addLinkContact);



		/* Ajout d'un listener pour créer un nouveau champs lors du clic sur le lien */
		$addLink.click(function(e){
			ajoutChampFichier();
			e.preventDefault();
			$('#bons_attachement_fichiersPdf_' + ( $indexFichier - 1 ) + '_file').trigger("click");
			return false;
		});
		/* Ajout d'un listener pour création d'un champs lors du clic sur le lien des fichiers des sitesBA */
		$addLinkFichierSiteBA.click(function(e){
            ajoutChampFichierSiteBA();
            e.preventDefault();
            $('#site_ba_fichiersJoint_' + ( $indexFichierSiteBA - 1 ) + '_file').trigger("click");
            return false;
        });
        /* Ajout d'un listener pour création d'un champs contact lors du clic sur le lien des contacts */
        $addLinkContact.click(function(e){
            ajoutChampContactSiteBA();
            e.preventDefault();
            $('#site_ba_contacts_' + ( $indexContactSiteBA - 1 ) + '_nom').trigger("click");
            return false;
        });


		/* Affichage des informations du site selectionné dans l'encart SiteBA */
		$('#bons_attachement_site').change(function()
		{
			changeEnCours = true;
			resetInfosContact();
			/* On réinitialise les valeurs de la fiche client et du contact associé au bon */
            $('#idContact').val('');
            $('#nomContact').val('');
            $('#prenomContact').val('');
            $('#emailContact').val('');
            $('#telephoneContact').val('');
            $('#fonctionContact').val('');
            $('#bons_attachement_nomDuContact').val('');
            $('#bons_attachement_emailContactClient').val('');

			if ($('#bons_attachement_site').val() != '')
			{
				$('#titre_nouveau_siteBA').text('Modification du site');
				$('#fichiers_deja_joints').html('');
				$('#contacts_deja_associes').html('');
            	var $id_site_ba = this.value;
            	var $url = "{{ path('lci_ajax_bons_get_siteBA') }}";
            	$.ajax({
            	    url: $url,
            	    method: "post",
            	    data: {'id_site_ba':$id_site_ba},
            	    success: function(msg) 
					{
						var $tab_siteBA = $.parseJSON(msg);
						$('#id_site_ba').val($tab_siteBA[0]);
						$('#site_ba_intitule').val($tab_siteBA[1]);
						{# $('#site_ba_intitule').attr('readonly', true); // On autorise le changement du nom du site #}
						$('#site_ba_adresse').val($tab_siteBA[2]);
						$('#site_ba_lienGoogle').val($tab_siteBA[3]);			
						$('#site_ba_informationsClient').val($tab_siteBA[4]);
						/* Gestion des contacts client  : On split sur ; pour récupérer la 1ere valeur qui correspond à l'id pour requete ajax et affichage de la fiche client*/
						$tab_contact = $tab_siteBA[5];
						$.each($tab_siteBA[5], function($index, $tabContact) {
							ficheContactPourImpression($index);
							$html = '<p onClick=afficheContact(' + $index + ')>';
							$html = $html + $tabContact['nom'] + '</p>';
                	        $('#contacts_deja_associes').append($html);
                	    });
						if ($tab_siteBA[6]) {
							$.each($tab_siteBA[9], function(index, value) {
								$('#fichiers_deja_joints').append(value + '<br />');
							});
						}
						$('#site_ba_lienGoogle').trigger('change');
						/* Placement du marqueur sur la page */
						ajoutMarqueur($('#site_ba_lienGoogle').val());
						changeEnCours = false;
                	    return true;
                	},
					error: function(status, msg, tri) {
						alert('error ' + msg + tri);
					}
            	});
			} else {
				$('#site_ba_reset').trigger('click');
			}
        });
		
		/* Lors du clic sur reset on réautorise l'écriture du nom du site et on supprime la valeur de l'identifiant du site  pour éviter une mise à jour */
		$('#site_ba_reset').click(function()
		{
			$('#site_ba_intitule').attr('readonly', false);
			$('#site_ba_lienGoogle').attr('readonly', false);
			$('#id_site_ba').val('');
			$('#fichiers_deja_joints').html('');
			$('#contacts_deja_associes').html('');
			$('#titre_nouveau_siteBA').text('Nouveau site');

			resetInfosContact();
		});

		/* Permet de selectionner le dernier site - permet de réafficher le site après l'ajout d'un contact */
        {% if id_last_site is defined %}
            var id_last_site = "{{ id_last_site }}";
            $('#bons_attachement_site').val(id_last_site);
            $('#bons_attachement_site').trigger('change');
        {% endif %}

		//$('#bons_attachement_site').trigger('change');
	});

	// Fonction qui ajoute un champs 'Nouveau fichier' en remplacant le label et le nom par l'index du fichier
	function ajoutChampFichier() {
		var $nouveauPrototype = $($('#bons_attachement_fichiersPdf').data('prototype').replace(/__name__label__/g, '').replace(/__name__/g, $indexFichier));

	 	// Création et ajout d'un lien de suppression en fin de container
        $deleteLink = $('<a href="#" class="mini_link">Supprimer</a>');
        $nouveauPrototype.append($deleteLink);

		$deleteLink.click(function(e){
			$nouveauPrototype.remove();
			e.preventDefault();
			return false;
		});

		// Ajout du prototype a la fin du container
		//console.log($nouveauPrototype.html());
		$container.prepend($nouveauPrototype);
		//console.log($container.html());
		// Incrémentation de l'index des fichiers
		$indexFichier ++;
	}



    // Fonction qui ajoute un champs 'Nouveau fichier de site BA' en remplacant le label et le nom par l'index du fichier
    function ajoutChampFichierSiteBA() {
        var $nouveauPrototype = $($('#site_ba_fichiersJoint').data('prototype').replace(/__name__label__/g, '').replace(/__name__/g, $indexFichierSiteBA));

        // Création et ajout d'un lien de suppression en fin de container
        $deleteLink = $('<a href="#" class="mini_link">Supprimer</a>');
        $nouveauPrototype.append($deleteLink);

        // Ajout du listener permettant la suppression du champ fichier lors du clic sur le lien
        $deleteLink.click(function(e){
            $nouveauPrototype.remove();
            e.preventDefault();
            return false;
        });

		//console.log($nouveauPrototype);
        // Ajout du prototype a la fin du container
        $container_site.prepend($nouveauPrototype);
		//console.log($container_site.html());
        // Incrémentation de l'index des fichiers
        $indexFichierSiteBA ++;
    }


	function ajoutMarqueur($infosCoordonnees) {
		var $objPos = {};
		var $coordonnees = $infosCoordonnees.match(/latLng\((.+?),(.+?)\)/);
		if ($coordonnees != null)
		{
			$objPos.lat = parseFloat($coordonnees[1]);
        	$objPos.lng = parseFloat($coordonnees[2]);
		
			/* Création du marqueur */
        	monMarqueur = new google.maps.Marker({
        	    position: $objPos,
        	    map: maCarte
        	});

			/* Placement du marqueur sur la carte */
        	maCarte.setZoom(19);
        	maCarte.setCenter(monMarqueur.getPosition());
        	maCarte.setMapTypeId('satellite');
		}
	}




   	// Fonction qui ajoute un champs 'Contact au site BA' 
   	function ajoutChampContactSiteBA() 
	{
		// L'identifiant du nouveau champs sera : site_ba_contacts_$indexContactSiteBA_date_maj
        var $nouveauPrototype = $($('#site_ba_contacts').data('prototype').replace(/__name__label__/g, '').replace(/__name__/g, $indexContactSiteBA));

        // Création et ajout d'un lien de suppression en fin de container
        $deleteLink = $('<a href="#" class="mini_link">Supprimer</a>');
        $nouveauPrototype.append($deleteLink);

        // Ajout du listener permettant la suppression du champ fichier lors du clic sur le lien
        $deleteLink.click(function(e)
		{
            $nouveauPrototype.remove();
            e.preventDefault();
            return false;
        });

		// On place le nouveau champs input
		$container_new_contact = $('#container_new_contact');
		$container_new_contact.prepend($nouveauPrototype);

		// On indique les valeur par défaut des champs obligatoire
		var $today = new Date();	
		var $val_today = $today.getDate() + '/' + ($today.getMonth() + 1) + '/' +  $today.getFullYear();
		$('#site_ba_contacts_' + $indexContactSiteBA + '_date_maj').val($val_today);
		$('#site_ba_contacts_' + $indexContactSiteBA + '_fonction').val('Contact');
		$('#site_ba_contacts_' + $indexContactSiteBA + '_prenom').val('-');

		// On met en place l'activation js pour l'affichage du calendrier
        setDatePicker();

        // Ajout du prototype a la fin du container
        //$container_contact.prepend($nouveauPrototype);
        // Incrémentation de l'index des contacts
        $indexContactSiteBA ++;
    }


	/* fonction qui affiche les informations du contact dans l'encart Fiche Contact */
	function afficheContact($index_tab_contact) 
	{
		$('#idContact').val($tab_contact[$index_tab_contact]['id']);

        $('#nomContact').val($tab_contact[$index_tab_contact]['nom']);
        $('#prenomContact').val($tab_contact[$index_tab_contact]['prenom']);
        $('#emailContact').val($tab_contact[$index_tab_contact]['email']);
        $('#telephoneContact').val($tab_contact[$index_tab_contact]['telephone']);
        $('#fonctionContact').val($tab_contact[$index_tab_contact]['fonction']);
		$('#dateMajContact').val($tab_contact[$index_tab_contact]['maj']);
		$('#bons_attachement_nomDuContact').val($tab_contact[$index_tab_contact]['nom']);
		$('#bons_attachement_emailContactClient').val($tab_contact[$index_tab_contact]['email']);
		$('#indexContact').val($index_tab_contact);
	}


	function ficheContactPourImpression($index_tab_contact)
	{
		var $container = $($("#bloc_contact_pour_impression"));
		var $html = '';
		if (($tab_contact[$index_tab_contact]['prenom'] != '') && ($tab_contact[$index_tab_contact]['prenom'] !=  null) && ($tab_contact[$index_tab_contact]['prenom'] != '-'))
        {
 			$html += capitalize($tab_contact[$index_tab_contact]['prenom']) + ' ';
		}
		$html += capitalize($tab_contact[$index_tab_contact]['nom']);
		if (($tab_contact[$index_tab_contact]['email'] != '') && ($tab_contact[$index_tab_contact]['email'] != null))
		{
			$html += ' - ' + $tab_contact[$index_tab_contact]['email'];
		}
		if (($tab_contact[$index_tab_contact]['telephone'] != '') && ($tab_contact[$index_tab_contact]['telephone'] != null))
        {
            $html += ' : ' + $tab_contact[$index_tab_contact]['telephone'];
		}
		$html += " ( " + $tab_contact[$index_tab_contact]['fonction'] + " )<br />";
		$container.append($html);	
	}


	function setDatePicker() 
	{
		$("input[placeholder='dd/mm/YYYY']").datepicker(); 
	}


	function resetInfosContact() 
	{
        /* On réinitialise les valeurs de la fiche client et du contact associé au bon */
        $('#idContact').val('');
        $('#nomContact').val('');
        $('#prenomContact').val('');
        $('#emailContact').val('');
        $('#telephoneContact').val('');
        $('#fonctionContact').val('');
		$('#dateMajContact').val('');
        $('#bons_attachement_nomDuContact').val('');
        $('#bons_attachement_emailContactClient').val('');
		var $container = $($("#bloc_contact_pour_impression"));
		var $html = '';
		$container.html($html);
	}


	function supprimerContact() 
	{
        $url_supp = "{{ path('lci_ajax_bon_contact_supp') }}";
        $id_contact_supp = $('#idContact').val();
        $.ajax({
            url: $url_supp,
            method: "post",
            data: {'id_contact_supp':$id_contact_supp},
            success: function(msg)
            {
				/*
				$id_site_selected = $('#bons_attachement_site option:selected').val();
				$('#bons_attachement_site option[value=""]').prop('selected', true);
				$('#bons_attachement_site').trigger('change');
				$('#bons_attachement_site option[value="' + $id_site_selected + '"]').prop('selected', true);
				*/
				$('#bons_attachement_site').trigger('change');
            }
        });
	}


	function modifierContact()
	{
		var $refreshContact;
		$url_modif = "{{ path('lci_ajax_bon_contact_modif') }}";
		$id_contact_modif = $('#idContact').val();
		$nom = $('#nomContact').val();
		$prenom = $('#prenomContact').val();
        $email = $('#emailContact').val();
		$tel = $('#telephoneContact').val();
		$fonction = $('#fonctionContact').val();
		$index = $('#indexContact').val();
		$.ajax({
			url: $url_modif,
			method: "post",
			data: {'id_contact_modif':$id_contact_modif, 'nomContact':$nom, 'prenomContact':$prenom, 'telephoneContact':$tel, 'emailContact':$email, 'fonctionContact':$fonction},
			success: function(msg)
			{
				$('#bons_attachement_site').trigger('change');
				$refreshContact = setInterval(function() 
				{
					console.log('test');
					if (changeEnCours == false)
					{
						afficheContact($index);
						clearInterval($refreshContact);
					}
				}, 2);
			}
		});	
	}

</script>



{# lien vers api autocompletion de google #}
<script src="https://maps.googleapis.com/maps/api/js?key={{ apiKey }}&libraries=places&callback=initAutocomplete"  async defer></script> 

{% endblock javascript %}
