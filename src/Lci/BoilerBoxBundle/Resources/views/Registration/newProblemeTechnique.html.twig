{# src/Lci/BoilerBoxBundle/Resources/views/Registration/newProblemeTechnique.html.twig #}
{% extends "LciBoilerBoxBundle::secondParcLayout.html.twig" %}

{% form_theme form 'form/fields.html.twig' %}

{% block messages_flash %} {{ parent() }}{% endblock messages_flash %}

{% block liens_css %}
	{{ parent() }}
	<style>
		.main-box{
			position: relative;
		}
		.form__field select, .form__field select option{
			font-size: 10pt;
		}
	</style>
{% endblock %}

{% block fos_user_content %}
{{ parent() }}
<main class='main-box'>
	{{ form_start(form, {'action':path('lci_register_problemeTechnique'), 'method':'POST', 'name':'myForm', 'class':'form'}) }}	
	<div class='{# petit_menu_principal #} main-box__action'>
		{% if type_probleme == 'update' %}
			<span class="tooltip-wrapper" onClick='attente(); sendAjaxMail(); fin_attente();'>
				<img src="{{ asset('bundles/lciboilerbox/images/actions/mail.svg') }}" class="btn_petit_picto selectionnable" title='Envoyer un mail de rappel' alt="Mail de rappel"/>
				<span class="tooltip">Envoyer un mail de rappel</span>
			</span>
			<span class="tooltip-wrapper" onClick='attente(); showPrintedVersion("{{ form.id.vars.value }}"); fin_attente();' >
				<img src="{{ asset('bundles/lciboilerbox/images/actions/imprimer.svg') }}" class="btn_petit_picto selectionnable" title='Afficher la version imprimable' alt="Version imprimable"/>
				<span class="tooltip">Version imprimable</span>
			</span>
		{% endif %}
	</div>
	<h1 class="main-box__title">{{ titre }}</h1>
	
	<div class='main-box__content'>
		<div class='form__field'>
			{{ form_widget(form.bloquant) }} {{ form_label(form.bloquant) }}
		</div>
		<div class='form__field'>
			{{ form_label(form.dateSignalement) }}
			{{ form_widget(form.dateSignalement) }}
			{{ form_errors(form.dateSignalement) }}
		</div>
		<div class='form__field'>
			{{ form_label(form.module) }}
			{{ form_widget(form.module) }}
			{{ form_errors(form.module) }}
			<div class='module_selectionne'>&nbsp;</div>
		</div>
		<div class='form__field'>
			{{ form_label(form.equipement) }}
			{{ form_widget(form.equipement) }}
		</div>
		<div class='form__field'>
			{{ form_widget(form.description) }}
			{{ form_errors(form.description) }}
		</div>
		<div class='form__field'>
			{{ form_label(form.user) }}
			{{ form_widget(form.user) }}
		</div>
		<div class='form__field'>
			{{ form_widget(form.solution) }}
			{{ form_errors(form.solution) }}
		</div>
		<div class='form__field'>
			{{ form_widget(form.corrige) }}
			{{ form_label(form.corrige) }}
		</div>
		<div class='form__field'>
			<div class='register_date_correctif cacher'>
				{{ form_label(form.dateCorrection) }}
				{{ form_errors(form.dateCorrection) }}
			</div>
			<div class='register_date_correctif cacher'>
				{{ form_widget(form.dateCorrection) }}
			</div>
		</div>
		<div class='form__field'>
			{{ form_widget(form.cloture) }}
			{{ form_label(form.cloture) }}
		</div>
		<div class='form__field'>
			<div class='register_date_cloture cacher'>
				{{ form_label(form.dateCloture) }}
				{{ form_errors(form.dateCloture) }}
			</div>
			<div class='register_date_cloture cacher'>
				{{ form_widget(form.dateCloture) }}
			</div>
		</div>
		<div class='div_fichier_joint'>
			{% if type_probleme == 'update' %}
				{% if entity_probleme.fichiersJoint is not empty %}
					<div class='nouveau_probleme_ligne'><div style='font-size:14px;'>Fichiers joints</div></div>
					{% for fichier in entity_probleme.fichiersJoint %}
						{% if fichier.alt|slice(0,8) == 'removed_' %}
							<div class='lien_fichier_download_removed'>{{ fichier.alt }}</div>
						{% else %}
							<div class='nouveau_probleme_ligne'><a onclick="window.open(this.href); return false;" href="{{ asset('uploads/problemes/' ~ fichier.url) }}">{{ fichier.alt }}</a></div>
						{% endif %}
					{% endfor %}
				{% endif %}
			{% endif %}
			{{ form_widget(form.fichiersJoint) }}
		</div>
	</div>

	<div class='form__btn notToBePrinted'> 
		<div class='div_boutons_validation main-box__btn'>
			{% if provenance == 'liste' %}
				<button onClick="attente(); redirection('retourListeProblemes')"; class="btn_menu btn btn--second">Retour</button>
			{% elseif provenance == 'accueil' %}
				<button onClick="attente(); redirection('retourMenu')"; class="btn_menu btn btn--second">Retour</button>
			{% endif %}
			{% if is_granted('ROLE_RESPONSABLE_PARC') %}
				<button onClick="attente(); document.forms['myForm'].submit();return false;" class="btn_menu btn btn--main" >Enregistrer</button>
			{% endif %}
		</div>	
	</div>

	{{ form_rest(form) }}

	{{ form_end(form) }}

	<form name='myFormDownload' method='post' action={{ path('lci_download_probleme_file') }}>
		<input type='hidden' name='fileName' id='fileName' />
		<input type='hidden' name='fileUrl' id='fileUrl' />
		<input type='hidden' name='fileId' id='fileId' />
	</form>

	<form method='post' name='form_change' action={{ path('lci_register_problemeTechnique') }}>
		<input type='hidden' id='id_probleme' name='id_probleme' />
		<input type='hidden' id='printed_version' name='printed_version' />
	</form>
</main>

<script type='text/javascript'>
	// Fonction style barre de navigation page active
	$(window).on('load', function pageActive(){
		$('.side-nav .parc-tech').addClass('active');
	})
	
	function showPrintedVersion(numeroProbleme){
		$('#id_probleme').val(numeroProbleme);
        document.forms['form_change'].submit();
	}

     function downloadFile($fileurl, $filename, $fileid){
         $('#fileName').val($filename);
		 $('#fileUrl').val($fileurl);
		 $('#fileId').val($fileid);
         document.forms['myFormDownload'].submit();
     }


	$(document).ready(function(){
		$('#probleme_technique_dateSignalement').datepicker();
		$('#probleme_technique_dateCorrection').datepicker();
		$('#probleme_technique_dateCloture').datepicker();	

		/* Vérification de l'état initial des checkbox */
		if ($('#probleme_technique_corrige').is(':checked')){
            $('.register_date_correctif').removeClass('cacher');
        }
		if ($('#probleme_technique_cloture').is(':checked')){
            $('.register_date_cloture').removeClass('cacher');
        }
		
		/* Affichage ou Cache des zone date en fonction de l'état des checkbox */
		$('#probleme_technique_corrige').change(function(){
			if ($('#probleme_technique_corrige').is(':checked')){
				$('#probleme_technique_dateCorrection').val($.format.date(new Date(), 'dd-MM-yyyy'));
				$('.register_date_correctif').removeClass('cacher');
			} else {
				$('.register_date_correctif').addClass('cacher');
			}
		});
		/* Seul le responsable du parc peut cloturer un ticket */
		{% if is_granted('ROLE_RESPONSABLE_PARC') %}
			$('#probleme_technique_cloture').change(function(){
				if ($('#probleme_technique_cloture').is(':checked')){
					$('#probleme_technique_dateCloture').val($.format.date(new Date(), 'dd-MM-yyyy'));
					$('.register_date_cloture').removeClass('cacher');
				} else {
					$('.register_date_cloture').addClass('cacher');
				}
			});
		{% endif %}

		// Ajout du lien vers l'insertion de fichier joints
		var $fichier_container = $('div#probleme_technique_fichiersJoint');
		//		Ajout du lien pour insertion d'un nouveau fichier
		//			Création du lien
		var $addLink = $('<a href="#" id="add_fichier">Joindre un fichier</a>');
		//			Insertion du lien dans la page
		$fichier_container.append($addLink);

		// Ajout de la fonction qui intercepte le clic sur le lien 'nouveau fichier
		$addLink.click(function(e){
			// Ajout d'un champ 'nouveau fichier' dans le container
			ajoutFichierJoint($fichier_container);
			e.preventDefault();
			return false;
		});

		// Compteur indiquant le nombre de champs de fichier présents dans le container
		var $index_fichiers = $fichier_container.find(':input').length;

		// Création du premier champs 'fichier joint'
		if ($index_fichiers != 0){
			for (i=0; i<$index_fichiers; i++){
				$('#probleme_technique_fichiersJoint_' + i).parent().closest('div').remove();
			}
		}


		// Fonction qui ajoute le champs Fichier joint dans le container passé en argument
		function ajoutFichierJoint($container){
		    // Dans le contenu de l'attribut « data-prototype », on remplace :
		    // - le texte "__name__label__" qu'il contient par le label du champ
	   	   	// - le texte "__name__" qu'il contient par le numéro du champ
	     	var $prototype = $($container.attr('data-prototype').replace(/__name__label__/g, '')	
																.replace(/__name__/g, $index_fichiers));
			// Ajout d'un lien de suppression
			ajoutLienSuppression($prototype);
			// Ajout du prototype à la fin du container
			$fichier_container.append("</div>");
			$fichier_container.append($prototype);
			$fichier_container.append("<div class='prototype'>");
			// Incrémentation du compteur pour que le prochain champs de fichier joint ait un autre numéro
			$index_fichiers ++;
		}



		// Fonction qui ajoute un lien de suppression
		function ajoutLienSuppression($prototype){		
			$lienSuppression = $('<a href="#" class="lien_fichier_supprime">Supprimer</a><br /><br />');
			$prototype.append($lienSuppression);
			// Fonction qui gère la suppression du lien
			$lienSuppression.click(function(e){
				$prototype.remove();
				e.preventDefault();
				return false;
			});
		}



		$('#picto_ajouter_module').mouseover(function(){
			$('#picto_ajouter_module_hover').removeClass('cacher');
		});
		$('#picto_ajouter_module').mouseout(function(){
			$('#picto_ajouter_module_hover').addClass('cacher');
		});

		$('#picto_ajouter_equipement').mouseover(function(){
			$('#picto_ajouter_equipement_hover').removeClass('cacher');
		});
		$('#picto_ajouter_equipement').mouseout(function(){
			$('#picto_ajouter_equipement_hover').addClass('cacher');
		});

		$('#probleme_technique_module option').hover(function(e){
			$('.module_selectionne').text('-> ' + e.target.text);
		});
		$('#probleme_technique_module').mouseleave(function(e){
			$('.module_selectionne').html('&nbsp;');
		});
	});


	function sendAjaxMail(){
		$.ajax({
			url: "{{ path('lci_ajax_mail_probleme_rappel') }}",
			success: function($msg){
				alert('Message de rappel envoyé');
			},
			error: function(xhr, ajaxOptions, thrownError) {
				alert(xhr.status);
				alert(thrownError);
			}
		});
	}
</script>

{% endblock fos_user_content %}
