{# src/Lci/BoilerBoxBundle/Resources/views/Tickets/form_saisie_ticket.html.twig #}

{% extends "LciBoilerBoxBundle::secondBonsLayoutLogged.html.twig" %}

{% block meta_viewport %}
    <meta name="viewport" content="width=device-width, initial-scale=0.5, shrink-to-fit=no">
{% endblock meta_viewport %}

{% block boilerBoxCSS %}
    {{ parent() }}
	<link rel="stylesheet" type="text/css" href="{{ asset('bundles/lciboilerbox/css/saisie_ba.css') }}" media='screen' />
	<link rel="stylesheet" type="text/css" href="{{ asset('bundles/lciboilerbox/css/saisie_ba_print.css') }}" media='print' />
	<style>
		body > form{
			padding: 8px;
		}
		.erreur_formulaire {
			border: 2px solid red !important;
		}
	</style>
{% endblock boilerBoxCSS %}

{% block title %}{{ parent() }} : Bons d'interventions{% endblock title %}
{% block class_menu_boiler %} elargir {% endblock class_menu_boiler %}
{% form_theme form 'templates/form/fields.html.twig' %}

{% block mainBody %}


<input type='hidden' name='id_contact' id='idContact'>

<header class="sub-header sub-header--blue">
	<h1 class="sub-header__title">Ticket d'incident</h1>
</header>

{{ form_start(form, {'action':path('saisie_ticket'), 'method':'POST', 'name':'myForm' }) }}
{{ form_errors(form) }}
<input type='hidden' value='non' name='enregistrement' id='enregistrement'>

<section class="info">
	<h1 class="info__title" style="margin-left:0px">Nouveau Ticket</h1>
</section>

<main class="content">
<section class="content__brick">
	<fieldset class="fieldset">
		<h2 class="fieldset__title">Informations</h2>
		<div class="form__field rel">
    		{{ form_label(form.site) }}
			{{ form_widget(form.site) }}
			{{ form_errors(form.site) }}
			<button type="button" id="bntBonsSite" class="btn btn--main btn--round add tooltip-wrapper" onclick="togglePopUp(bonsSite)"><span class="tooltip">Créer site</span></button>
		</div>

        <div class="form__field">
			<div>
            	{{ form_label(form.numeroAffaire) }}
            	{{ form_widget(form.numeroAffaire) }}
            	{{ form_errors(form.numeroAffaire) }}
            </div>
        </div>

		{# Gestion du nom du contact en javascript car on le gère depuis le select html #}
        <div class="form__field cacher">
            {{ form_errors(form.nomDuContact) }}
            {{ form_label(form.nomDuContact) }}
        	{{ form_widget(form.nomDuContact) }}
        </div>
{#
		<div id='impression_fiche_site' class="form__field flex flex--row flex--between">
			<a href='https://goo.gl/maps/RG2zoSZrbis8vsqj6' target='google'>
				Accès Google Map
			</a>
			A COMMENTER
	       	<div class='validation_impression tooltip-wrapper notToBePrinted' style="margin:0;">
	       	    <img onClick="attente(); window.print(); return false;" alt="Valider" src="{{ asset('bundles/lciboilerbox/images/actions/imprimer.svg') }}" style="width:20px;height:20px;cursor:pointer;"/>
	       	    <span class="tooltip">Imprimer</span>
	       	</div>
#}
		<div class="form__field form__field--double">
        	<div>
        	    {{ form_label(form.userInitiateur) }}
        	    {{ form_widget(form.userInitiateur) }}
        	    {{ form_errors(form.userInitiateur) }}
        	</div>
			{# Intervenant #}
			<div>
				{{ form_label(form.user) }}
				{{ form_widget(form.user) }}
				{{ form_errors(form.user) }}
			</div>
		</div>
	</fieldset>

    <fieldset class="fieldset">
        <h2 class="fieldset__title">Contact</h2>
        <div class="form__field rel">
            <label>Nom</label>
            <select id='select_contact'>
                <option value=''></option>
            </select>
            <button type="button" id='btn_contact' class="btn btn--main btn--round add tooltip-wrapper cacher" onClick="gestionDesContacts2();"><span class="tooltip">Créer contact</span></button>
        </div>
        <div class="form__field form__field--double">
            <div>
                {{ form_errors(form.emailContactClient) }}
                {{ form_label(form.emailContactClient) }}
                {{ form_widget(form.emailContactClient, {'attr':{'class':"disabled"} }) }}
            </div>
            <div>
                {{ form_errors(form.telephoneContactClient) }}
                {{ form_label(form.telephoneContactClient) }}
                {{ form_widget(form.telephoneContactClient, {'attr':{'class':"disabled"} }) }}
            </div>
        </div>
    </fieldset>

</section>

<section class="content__brick">
	{# fieldset Equipement #}
	{% include "Equipements/html_encart_equipement.html.twig" %}

	<fieldset class="fieldset">
		<h2 class="fieldset__title">Fichier(s)</h2>
		<div class="form__field rel">
			<span id="add-fichierBon">Ajouter fichier PDF (20Mo max)</span>
			<button type="button" class="btn btn--main btn--round add tooltip-wrapper" onclick="gestionDesFichiers();"><span class="tooltip">Ajouter fichier</span></button>
		</div>
		<div id='fichiers_deja_joints2' class="add-list">
		</div>
	</fieldset>
	<fieldset class="fieldset">
		<h2 class="fieldset__title">Photos</h2>
		<label class="form__field rel">
            {{ form_label(form.cheminDossierPhotos) }}
            {{ form_widget(form.cheminDossierPhotos) }}
            {{ form_errors(form.cheminDossierPhotos) }}
		</label>
	</fieldset>
</section>
<section class="content__brick">
	<fieldset class="fieldset">
		<h2 class="fieldset__title">Localisation</h2>
		<div id='map'></div>
	</fieldset>
    <fieldset class="fieldset">
        <h2 class="fieldset__title">Motif</h2>
        <div class="form__field">
            <div>
                {{ form_errors(form.motif) }}
                {{ form_label(form.motif) }}
                {{ form_widget(form.motif) }}
            </div>
        </div>
    </fieldset>
	<div class="content__btn">
		{# Retour à la page d'accueil #}
		<a href="{{ path('lci_bons_attachements') }}" class="btn_menu btn btn--second">Retour</a>
		<button class="btn_menu btn btn--main" onClick="checkValidationBeforeSend(); return false;">Créer bon</button>
	</div>
</section>



<!-- Section cachée -->
<section class="content__brick cacher">
    <fieldset class="cacher">
        <div class="form__field form__field--double">
            <div>
                {{ form_label(form.typeNouveau) }}
                {{ form_widget(form.typeNouveau) }}
                {{ form_errors(form.typeNouveau) }}
            </div>
            <div>
                {{ form_label(form.idNouveau) }}
                {{ form_widget(form.idNouveau) }}
                {{ form_errors(form.idNouveau) }}
            </div>
        </div>
		<div class="form__field form__field--double">
            <div>
                {{ form_label(form.siteNouveau) }}
                {{ form_widget(form.siteNouveau) }}
                {{ form_errors(form.siteNouveau) }}
            </div>
        </div>
    </fieldset>
</section>
	
	
</main>

{# Popup Equipements #}
{% include "Equipements/html_popup_equipement.html.twig" %}

<!-- Popup d'ajout de fichiers au bon -->
<section id="popupGestionFichiersBon" class="popup cacher">
    <div class="popup__wrapper" style="width:420px;">
        <header class="popup__header">
            <h1 id='titre_gestion_fichiers_bon' class="popup__title">Sélection des fichiers du bon</h1>
            <div id='close_cross_fichier' class="close-cross" onclick="fermeturePopupGestionFichiersBon();"></div>
        </header>

        <div class="popup__content">
			<span id='lien_ajout_fichier'></span>
            <div>
                <div class="form__field rel">
       				<div>
           				{{ form_errors(form.fichiersPdf) }}
           				{{ form_label(form.fichiersPdf) }}
           				{{ form_widget(form.fichiersPdf) }}
       				</div>
				</div>
			</div>
		</div>
		<div class="popup__action" style="margin-top:24px;">
			<button class="btn btn--main" onclick="$('#close_cross_fichier').trigger('click'); return false;" style="margin-left:0;">Enregistrer</button>
		</div
	</div>
</section>

{{ form_rest(form) }}
{{ form_end(form) }}

{# Popup de création des équipements #}
<section id="popupEquipement2" class="popup cacher">
    {{ render(path('lci_ajax_bon_new_equipement')) }}
</section>


<!-- popup Site -->
<section id="bonsSite" class="popup cacher">
	{{ render(path('lci_ajax_bon_new_siteBA')) }}
</section>


<!-- popup Nouveau Contact -->
<section id="bonsNouveauContact" class="popup cacher">
	<div class="popup__wrapper">
		<header class="popup__header">
			<h1 id='titre_nouveau_contact' class="popup__title">Nouveau Contact</h1>
			<div class="close-cross" onclick="togglePopUp(bonsNouveauContact)"></div>
		</header>
		<div class="popup__content">
            <div class="form__field form__field--double">
            	<div>
	                <label>Nom</label>
	                <input type='text' name='nomContact' id='nomContact'>
	            </div>
	            <div>
	                <label>Prénom</label>
	                <input type='text' name='prenomContact' id='prenomContact'>
	            </div>
	        </div>
            <div class="form__field form__field--double">
            	<div>
	                <label>Mail</label>
	                <input type='text' name='emailContact' id='emailContact'>
	            </div>
	            <div>
	                <label>Téléphone</label>
	                <input type='text' name='telephoneContact' id='telephoneContact'>
	            </div>
	        </div>
            <div class="form__field">
                <label>Fonction</label>
                <input type='text' name='fonctionContact' id='fonctionContact'>
            </div>
            <div class='form__btn form__btn--col notToBePrinted'>
                <button onClick="modifierContact(); return false;" class="btn_menu btn btn--main btn--wide">Modifier</button>
                <button onClick="supprimerContact(); return false;" class="btn_menu btn btn--delete btn--wide">Supprimer</button>
            </div>
		</div>
	</div>
</section>

<!-- popup Nouveau Contact V2-->
<section id="popupContact2" class="popup cacher">
	{{ render(path('lci_ajax_siteba_new_contact')) }}
</div>


<div class="navigation-mobile">
	<div class=""></div>
	<div class=""></div>
</div>
{% endblock mainBody %}









{% block javascript %}

<script type='text/javascript'>

    // Fonction style barre de navigation page active
    $(window).on('load', function pageActive(){
        $('.side-nav .bons-interv').addClass('active');
    });


    var maCarte;

    function attendreRechargement()
    {
        $('*').addClass('cursor--wait');
    }

    function finAttendreRechargement()
    {
        $('*').removeClass('cursor--wait');
    }



    function initAutocomplete()
	{
        var monMarqueur;

        maCarte = new google.maps.Map(document.getElementById('map'), {
            center: {lat: 50.474, lng: 2.97118},
            zoom: 4,
            mapTypeId: 'roadmap'
        });

        /* Mise en place du textbox dans la carte */
        var input = document.getElementById('site_ba_adresse');

        var autocomplete = new google.maps.places.Autocomplete(input);
        autocomplete.setFields(['place_id', 'geometry']);


        /* Placement du marqueur sur l'emplacement selectionné */
        maCarte.addListener('click', function(e)
		{
            if (monMarqueur != null) {
                monMarqueur.setMap(null);
            }
            monMarqueur = new google.maps.Marker({
                position: e.latLng,
                map: maCarte,
                icon: 'http://maps.google.com/mapfiles/kml/paddle/blu-circle.png'
            });
            maCarte.setZoom(19);
            maCarte.setCenter(monMarqueur.getPosition());
            maCarte.setMapTypeId('satellite');


            /* Service de geocoding pour récupérer l'adresse du lieu selectionné par la souris */
            /* On ne modifie que l'url en fonction du marqueur */
            geocoder = new google.maps.Geocoder();
            geocoder.geocode({'location':monMarqueur.getPosition()}, function(results, status) 
			{
                if (status == 'OK') 
				{
                    $('#site_ba_lienGoogle').val('latLng' + monMarqueur.getPosition());
                    $('#site_ba_lienGoogle').attr('readonly', true);
                } else {
                    alert('Aucune adresse trouvée pour le lieu selectionné');
                }
            });
        });


        autocomplete.addListener('place_changed', function() 
		{
            var place = autocomplete.getPlace();
            if (place.geometry) {
                maCarte.panTo(place.geometry.location);
                maCarte.setZoom(19);
                maCarte.setMapTypeId('satellite');
                monMarqueur = new google.maps.Marker({
                    position: place.geometry.location,
                    map: maCarte
                });
            }
            $('#site_ba_lienGoogle').val('latLng' + place.geometry.location);
            $('#site_ba_lienGoogle').attr('readonly', true)
        });
    }

    $('#site_ba_lienGoogle').on('change', function()
    {
        var $objPos = {};

        var $position = $('#site_ba_lienGoogle').val();
        if ($position == '' )
        {
            return 0;
        }


        // Si la coordonnée est retournée par l'outil de google map On zoom sur le lieu de l'adresse selectionnée
        // Sinon si l'adresse provient du site web google map, on extrait les coordonnées
        var $coordonnees = $position.match(/latLng\((.+?),(.+?)\)/);
        if ($coordonnees == null)
        {
            geocoder = new google.maps.Geocoder();
            var $adresse = 'https://maps.googleapis.com/maps/api/geocode/json?address=' + $('#site_ba_lienGoogle').val() + '&key=' + "{{ apiKey }}";
            $.ajax({
                url: $adresse,
                method: "get",
                success: function(msg) {
                    $objPos.lat = msg['results'][0]['geometry']['location']['lat'];
                    $objPos.lng = msg['results'][0]['geometry']['location']['lng'];
                    maCarte.setCenter($objPos);
                    maCarte.setZoom(19);
                    maCarte.setMapTypeId('satellite');
                    monMarqueur = new google.maps.Marker({
                        position: $objPos,
                        map: maCarte
                    });
                    $latLng = 'latLng(' + $objPos.lat + ',' + $objPos.lng + ')';
                    $('#site_ba_lienGoogle').val($latLng);
                }
            });
        } else {
            $objPos.lat = parseFloat($coordonnees[1]);
            $objPos.lng = parseFloat($coordonnees[2]);
            maCarte.setCenter($objPos);
            maCarte.setZoom(19);
            maCarte.setMapTypeId('satellite');
        }
    });



	var $indexFichier = 1;
	var $indexFichierSiteBA = 1;
	var $indexContactSiteBA = 1;
	var $container_fichiers_bon;
	var $container_fichiers_site;
	var $container_contacts_site;

	var $tab_contact = new Array();

	$(document).ready(function() 
	{
		attendreRechargement();

        /* Mise en place de l'objet datepicker avec 2 mois affichés */
        $.datepicker.setDefaults({
            numberOfMonths: 1,
            dateFormat: 'dd/mm/yy',
            showWeek: true,
            gotoCurrent: true,
            changeMonth: true,
            changeYear: true,
            showAnim: "fadeIn",
            maxDate: '+2Y'
        });

		setDatePicker();

		// Récupération du container des fichiers des bons 
		$container_fichiers_bon = $('#ticket_incident_fichiersPdf');

		// Récupération du container des fichiers des SitesBA 
		$container_fichiers_site = $('#encart_fichiers_siteBA'); //$('#site_ba_fichiersJoint');

        // Récupération du container des contacts des SitesBA 
        $container_contacts_site = $('#site_ba_contacts');



        /* Lien permettant l'ajout d'un nouveau contact au site */
        var $addLinkContact = $('<a href="#" id="add_contact" class="small_link">Ajouter un contact</a>');

		/* Lien permettant l'ajout d'un nouveau fichier au bon */
		var $addLinkFichierBon = $('<a href="#" id="add_fichier" class="small_link">Ajouter un fichier</a>');

		/* Lien permettant l'ajout d'un nouveau fichier au site */
		var $addLinkFichierSiteBA = $('<a href="#" id="add_fichier_site" class="small_link">Ajouter un fichier</a>');



		/* Ajout du lien dans la div du container */
		$('#lien_ajout_fichier').html($addLinkFichierBon);

		/* Ajout du lien dans la div du container de fichiers des sites */
		$('#lien_ajout_fichier_siteBA').html($addLinkFichierSiteBA);

        /* Ajout du lien dans la div du container de contact des sites */
        $('#lien_ajout_contact').html($addLinkContact);



		/* Ajout d'un listener pour créer un nouveau champs lors du clic sur le lien */
		$addLinkFichierBon.click(function(e){
			ajoutChampFichier();
			e.preventDefault();
			// On click sur le lien 'Parcourir' pour afficher la fenetre de recherche du fichier
			$('#ticket_incident_fichiersPdf_' + ( $indexFichier - 1 ) + '_file').trigger("click");
			return false;
		});

		/* Ajout d'un listener pour création d'un champs lors du clic sur le lien des fichiers des sitesBA */
		$addLinkFichierSiteBA.click(function(e){
            ajoutChampFichierSiteBA();
            e.preventDefault();
            $('#site_ba_fichiersJoint_' + ( $indexFichierSiteBA - 1 ) + '_file').trigger("click");
            return false;
        });

        /* Ajout d'un listener pour création d'un champs contact lors du clic sur le lien des contacts */
        $addLinkContact.click(function(e){
            ajoutChampContactSiteBA();
            e.preventDefault();
            $('#site_ba_contacts_' + ( $indexContactSiteBA - 1 ) + '_nom').trigger("click");
            return false;
        });



		// Gestion du select intervenant
        $('#ticket_incident_user').change(function() 
		{
			if ($('#ticket_incident_user').val() !=  null)
			{
				$('#ticket_incident_user').removeClass('erreur_formulaire');
			}
        });

		// Gestion du select site
		/* Affichage des informations du site selectionné dans l'encart SiteBA */
		$('#ticket_incident_site').change(function()
		{
			initAutocomplete();

			// Réinitialisation des informations concernant les sites
			$('#site_ba_reset').trigger('click');
			resetInfosSite();

			// Retire des encart rouge indiquant les champs manquants pour l'envoi du formulaire site
			resetCheck();

			// On réinitialise les valeurs de la fiche client et du contact associé au bon 
			resetInfosContact();

			// On réinitalise le select contact 
			$('#select_contact').html("<option value=''></option>");

			// On lance le raffraichissement de la popup Equipement
            refreshSelectEquipements();

			// SI UN SITE EST SELECTIONNE
			// Appel ajax pour obtenir les informations liées au site
			// + Affichage du bouton de création/modification de contact
			if ($('#ticket_incident_site').val() != '')
			{
				// On retire l'encart rouge indiquant qu'un site est necessaire pour l'envoi du formulaire
				$('#ticket_incident_site').removeClass('erreur_formulaire');

				// Affichage du bouton permettant la création/modification de contact
				$('#btn_contact').removeClass('cacher');

				$('#titre_nouveau_siteBA').text('Modification du site');

            	var $id_site_ba = this.value;
            	var $url = "{{ path('lci_ajax_bons_get_siteBA') }}";
            	$.ajax({
            	    url: $url,
            	    method: "post",
            	    data: {'id_site_ba':$id_site_ba},
            	    success: function(msg) 
					{
						var siteBA = $.parseJSON(msg);

						$('#id_site_ba').val(siteBA.id);
						$('#site_ba_intitule').val(siteBA.intitule);
						{# $('#site_ba_intitule').attr('readonly', true); // On autorise le changement du nom du site #}
						$('#site_ba_adresse').val(siteBA.adresse);
						$('#site_ba_informationsClient').val(siteBA.informationsClient);


						$.ajax({
							url: "{{ path('lci_ajax_bon_get_googlemap') }}",
							method: "POST",
							data: {'id_site_ba':$id_site_ba},
							success: function(urlGoogleMap)
                			{
								$('#site_ba_lienGoogle').val(urlGoogleMap);

		                        // Affichage de la map google
		                        $('#site_ba_lienGoogle').trigger('change');

		                        // Placement du marqueur sur la page 
		                        ajoutMarqueur($('#site_ba_lienGoogle').val());

							},
							error: function()
							{
								alert('error map google');
							}
						});

						// On ré initialise le select contact en indiquant la possiblité de création d'un contact
						html_option = "<option value=''>Ajouter un nouveau contact</option>";
						$.each(siteBA.contacts, function(index, contact) 
						{
							// ICI DEV ficheContactPourImpression(index);
							$html = '<p>';
							$html = $html + contact.nom + '</p>';
                	        $('#contacts_deja_associes').append($html);
							html_option += "<option value='" + contact.id + "'>" + contact.nom + "</option>";
                	    });
						$('#select_contact').html(html_option);	
            			
						// On reselectionne le contact précédemment selectionné
						{% if id_last_site is not null %}
            				if($('#ticket_incident_nomDuContact').val() != '')
            				{
                				$('#select_contact option:contains("' + $('#ticket_incident_nomDuContact').val() + '")').prop('selected', true);
								$('#select_contact').trigger('change');
            				}
						{% endif %}

/* ICI DEV A SUPP
						// Ajout des noms des fichiers précédemment joints au site
						$.each(siteBA.fichiersJoint, function(index, fichier) {
								$('#fichiers_deja_joints').append(fichier.alt + '<br />');
								$('#fichiers_deja_joints2').append("<div class='add-list__added " + fichier.id + "'>" + fichier.alt + "<div class='close-cross' onClick='supprimeFile(" + fichier.id + ");'></div></div>");
						});
*/
		
						// Ajout des équipements précédemment joints au site
                        $.each(siteBA.equipementBATickets, function(index, equipement) {
                                $('#equipements_deja_joints').append(equipement.denomination + '<br />');
                        });

						// Si on est dans l'action de changement de site suite au chargement de la page
						if ($chargementEnCours == true)
						{
        					// On re sélectionne les équipements précédemment selectionné après l'envoi sans sauvegarde du formulaire de bon
        					{% if tab_des_id_equipements_selectionnes | length != 0 %}
            					// On affiche tous les équipements pour re sélectionner les équipements sélectionnés avant l'envoi du formulaire
            					$('#select_equipement').val('');
            					$('#select_equipement').change();
					            {% for id_equipement in tab_des_id_equipements_selectionnes %}
                					// On check les checkbox des equipements
                					$('#equipement_' + "{{ id_equipement }}").prop('checked', true);
                					deplaceEquipement("{{ id_equipement }}");
            					{% endfor %}
            					// Puis on reselectionne le site du bon pour le select equipement afin d'afficher les équipements de ce site par défaut
            					$('#select_equipement').val($('#ticket_incident_site').val());
        					{% endif %}

        					// On affiche les équipements du site selectionné au chargement de la page
        					$('#select_equipement').change();


        					// Gestion des nouveaux contacts et nouveaux équipements a réafficher
        					if ($('#ticket_incident_siteNouveau').val() != '')
        					{
            					// Selection du contact si un nouveau contact est crée pour le site courant
            					switch($('#ticket_incident_typeNouveau').val())
            					{
                					case 'equipement':
                    					gestionDesSelectionEquipements();
                    					$('#select_equipement').val($('#ticket_incident_siteNouveau').val());
                    					$('#select_equipement').trigger('change');
                					break;
                					case 'contact':
                    					if ($('#ticket_incident_site').val() == $('#ticket_incident_siteNouveau').val())
                    					{
                        					// On affiche le nouveau contact ssi il est crée pour le site courant du bon
                        					$('#select_contact').val($('#ticket_incident_idNouveau').val())
                        					$('#select_contact').trigger('change');
                    					}
                					break;
            					}
            					// On réinitialise les paramètres de Création
            					$('#ticket_incident_typeNouveau').val('');
            					$('#ticket_incident_idNouveau').val('');
            					$('#ticket_incident_siteNouveau').val('');
        					}
							$chargementEnCours = false;
						}
						finAttendreRechargement();
                	},
					error: function(status, msg, tri) {
						if ($chargementEnCours == true)
						{
							$chargementEnCours = false;
						}
						finAttendreRechargement();
						alert('error ' + msg + tri);
					}
            	});
			} else {
				// Si aucun site n'est selectionné : On réinitialise les informations de la popup site
				// + désactivation du bouton de création / modification de contact
				$('#site_ba_reset').trigger('click');
				$('#btn_contact').addClass('cacher');

				if ($chargementEnCours == true)
                {
                    $chargementEnCours = false;
                }
				finAttendreRechargement();

			}
        });
		
		/* Lors du clic sur reset on réautorise l'écriture du nom du site et on supprime la valeur de l'identifiant du site  pour éviter une mise à jour */
		$('#site_ba_reset').click(function()
		{
			/* On réinitialise les informations de la popup site
			resetInfosSite();

            /* On réinitialise les valeurs de la fiche client et du contact associé au bon */
            resetInfosContact();

            /* On réinitalise le select contact */
            $('#select_contact').html("<option value=''></option>");
		});

		/******************************         READY POUR LES CONTACTS         ***************************************/

        // Gestion du select contact
        $('#select_contact').change(function()
        {
            // Réinitialisation des informations liées au contact
            resetInfosContact();

            // Gestion du texte du bouton d'ajout/modification du contact
            // + Gestion du titre de la popup Contact
            if ($('#select_contact').val() === '')
            {
                $('#select_contact + button > span').text('Créer un contact');
                $('#titre_nouveau_contact').text('Nouveau contact');
            } else {
                $('#select_contact + button > span').text('Modifier le contact');
                $('#titre_nouveau_contact').text('Modifier le contact');
            }

            // Affichage des informations concernant le contact sélectionné
            var $index_tab_contact = $('#select_contact').val();
            if ($('#select_contact').val() != '')
            {
                attendreRechargement();
                $.ajax({
                    url: "{{ path('lci_ajax_bon_get_infos_contacts') }}",
                    method: "post",
                    data: {'id_contact':$('#select_contact').val()},
                    success: function(data)
                    {
                        var contact = JSON.parse(data);
                        $('#contact_id').val(contact.id);
                        $('#contact_nom').val(contact.nom);
                        $('#contact_prenom').val(contact.prenom);
                        $('#contact_mail').val(contact.mail);
                        $('#contact_telephone').val(contact.telephone);
                        $('#contact_fonction').val(contact.fonction);
                        $('#ticket_incident_nomDuContact').val(contact.nom);
                        $('#ticket_incident_emailContactClient').val(contact.mail);
                        $('#ticket_incident_telephoneContactClient').val(contact.telephone);
                        finAttendreRechargement();
                    },
                    error: function()
                    {
                        finAttendreRechargement();
                        alert('error');
                    }
                });
            }

            // On retire l'encart rouge qui indique que les champs sont necessaires pour l'envoi du formulaire
            if ($('#select_contact').val() != '')
            {
                $('#select_contact').removeClass('erreur_formulaire');
            }
            if ($('#ticket_incident_emailContactClient').val() != '')
            {
                $('#ticket_incident_emailContactClient').removeClass('erreur_formulaire');
            }
            if ($('#ticket_incident_telephoneContactClient').val() != '')
            {
                $('#ticket_incident_telephoneContactClient').removeClass('erreur_formulaire');
            }
        });

		/****************************** 		 Actions faites au chargement de la page 		********************************************/

		var $chargementEnCours = true;

        /* Permet de selectionner le dernier site - permet de réafficher le site après l'ajout d'un contact */
        {% if id_last_site is defined %}
            var id_last_site = "{{ id_last_site }}";
            // Sauvegarde des informations du contact
            save_nom_contact  = $('#ticket_incident_nomDuContact').val();
            save_tel_contact  = $('#ticket_incident_telephoneContactClient').val();
            save_mail_contact = $('#ticket_incident_emailContactClient').val();

            // On rédéfini le select précédemment selectionné dans le select
            $('#ticket_incident_site').val(id_last_site);

            // On active le listener de changement de site courant
            $('#ticket_incident_site').trigger('change');

            // On redéfini les informations du contact précédemment selectionné
            $('#ticket_incident_nomDuContact').val(save_nom_contact);
            $('#ticket_incident_telephoneContactClient').val(save_tel_contact);
            $('#ticket_incident_emailContactClient').val(save_mail_contact);
        {% endif %}


        // Si la création d'un équipement est en erreur : affichage du formulaire
        {% if echec_creation_equipement == true %}
            $('#btn_ajout_equipement2').trigger('click');
        {% endif %}
	});



	// Fonction qui ajoute un champs 'Nouveau fichier' en remplacant le label et le nom par l'index du fichier
	function ajoutChampFichier() {
		var $nouveauPrototype = $($('#ticket_incident_fichiersPdf').data('prototype').replace(/__name__label__/g, '').replace(/__name__/g, $indexFichier));

	 	// Création et ajout d'un lien de suppression en fin de container
        $deleteLink = $('<a href="#" class="mini_link">Supprimer</a>');
        $nouveauPrototype.append($deleteLink);

		$deleteLink.click(function(e){
			$nouveauPrototype.remove();
			e.preventDefault();
			return false;
		});

		// Ajout du prototype a la fin du container
		$container_fichiers_bon.prepend($nouveauPrototype);
		// Incrémentation de l'index des fichiers
		$indexFichier ++;
	}



    // Fonction qui ajoute un champs 'Nouveau fichier de site BA' en remplacant le label et le nom par l'index du fichier
    function ajoutChampFichierSiteBA() {
        var $nouveauPrototype = $($('#site_ba_fichiersJoint').data('prototype').replace(/__name__label__/g, '').replace(/__name__/g, $indexFichierSiteBA));

        // Création et ajout d'un lien de suppression en fin de container
        $deleteLink = $('<a href="#" class="mini_link">Supprimer</a>');
        $nouveauPrototype.append($deleteLink);

        // Ajout du listener permettant la suppression du champ fichier lors du clic sur le lien
        $deleteLink.click(function(e){
            $nouveauPrototype.remove();
            e.preventDefault();
            return false;
        });

        // Ajout du prototype a la fin du container
        $container_fichiers_site.prepend($nouveauPrototype);
        // Incrémentation de l'index des fichiers
        $indexFichierSiteBA ++;
    }


	function ajoutMarqueur($infosCoordonnees) {
		var $objPos = {};
		var $coordonnees = $infosCoordonnees.match(/latLng\((.+?),(.+?)\)/);
		if ($coordonnees != null)
		{
			$objPos.lat = parseFloat($coordonnees[1]);
        	$objPos.lng = parseFloat($coordonnees[2]);
		
			/* Création du marqueur */
        	monMarqueur = new google.maps.Marker({
        	    position: $objPos,
        	});

			/* Placement du marqueur sur la carte */
        	maCarte.setZoom(19);
        	maCarte.setCenter(monMarqueur.getPosition());
        	maCarte.setMapTypeId('satellite');
		}
	}



	// Active le datepicker sur tous les input ayant le placeholder à 'dd/mm/YYYY'
	function setDatePicker() 
	{
		$("input[placeholder='dd/mm/YYYY']").datepicker(); 
	}


	function resetInfosSite()
	{
        $('#site_ba_intitule').attr('readonly', false);
        $('#site_ba_lienGoogle').attr('readonly', false);
        $('#id_site_ba').val('');
        $('#fichiers_deja_joints').html('');
        $('#contacts_deja_associes').html('');
        $('#titre_nouveau_siteBA').text('Nouveau site');

		$('#equipements_deja_joints').html('');
	}



	// Fonction d'ajout fichier
	var imageId = 0;
	var baseFiles = [];

	$("#add-fichierBon").on("click", () => {
		$("#fichierBon").click();
	});
	$("#add-equipBon").on("click", () => {
		$("#equipBon").click();
	});

	$('.file-input').change(function (e) {
		var input = e.target;
		var files = input.files;
		var images = $('.images');

		for (var i = 0; i < files.length; i++) {
			imageId++;

			((file) => {
				var reader = new FileReader();
				var fileName = file.name.replace(/\.[^.]*$/, ''); // without file extension
				var fileId = file.size + imageId;
				var baseFile = '';

				reader.onload = (e) => {
					var preview = '<div class="image image_' + i + '" data-id="' + fileId + '">' +
						'<div class="img"><img src="' + e.target.result + '"></div>' +
						'<button class="btn remove">Remove</button>' +
						'</div>';
					images.append(preview);

					baseFile = reader.result;

					baseFiles.push({
						id: fileId,
						name: file.name,
						file: baseFile,
						uploaded: 0
					});
				}

				reader.readAsDataURL(file);
			})(files[i]);
		}

		console.log('after upload :>> ', baseFiles);
	});

	$(document).on('click', '.remove', function (e) {
		e.preventDefault();

		var parent = $(this).parent();
		var id = parent.data('id');
		var removeIndex = baseFiles.map(function (item) {
			return item.id;
		}).indexOf(id);

		baseFiles.splice(removeIndex, 1);
		parent.remove();
		console.log('after remove :>> ', baseFiles);
		// var myJSON = JSON.stringify(baseFiles);
		// $('.files-text').val(myJSON);
	});


    function gestionDesFichiers()
    {
		togglePopUp(popupGestionFichiersBon);
		$('#add_fichier').trigger('click');
    }

    function fermeturePopupGestionFichiersBon()
    {
		// On vide l'ancienne liste des fichiers pour éviter de les afficher en double
		$('#fichiers_deja_joints2').html('');

        togglePopUp(popupGestionFichiersBon);

		// On affiche tous les fichiers selectionné pour le bon
        $('#popupGestionFichiersBon input[type="file"]').each(function()
		{
			var tab_index_fichier = this.id.split('_');
			var index_fichier = tab_index_fichier[tab_index_fichier.length - 2];
			var tab_nom_fichier = $('#' + this.id)[0]['value'].split('\\');
			var nom_fichier = tab_nom_fichier[tab_nom_fichier.length - 1];

			if (nom_fichier != '')
			{
				$('#fichiers_deja_joints2').append("<div class='add-list__added' id='encartFichierBA_" + index_fichier + "'>" + nom_fichier + "<div class='close-cross' onClick='retireBAFile(" + index_fichier + ");'></div></div>");
			} else {
                // Si il n'y a pas de nom de fichier on supprime le champs (simulation de click sur lien suppression
                var id_encart_a_supp = '#ticket_incident_fichiersPdf_' + index_fichier;
                $(id_encart_a_supp + ' + a').trigger('click');
            }
        });
    }



	// Click sur le bouton RETOUR de la popup nouveau site
	function retourPopupSiteBA()
	{
		// On retire les encart rouge
		$('#site_ba_intitule').removeClass('erreur_formulaire');
		$('#site_ba_adresse').removeClass('erreur_formulaire');
		
		togglePopUp(bonsSite);
		// Simulation click sur le premier lien supprimer pour enlever l'encart nouveau contact
		$('#container_new_contact a.mini_link').trigger('click');

		$('#site_ba > fieldset').removeClass('cacher');
		$('#ajout_fichier_siteBA_mobile_portrait').removeClass('cacher');
		$('#contacts_deja_associes').removeClass('cacher');

		//$('#titre_nouveau_siteBA').text('Nouveau Site');
		if ($('#ticket_incident_site').val() === '')
		{
			$('#titre_nouveau_siteBA').text('Nouveau site');
		} else {
			$('#titre_nouveau_siteBA').text('Modification du site');
		}
	}


   	var sauvegarde_select_user = $('#ticket_incident_user').html();
    // Envoi du service selectionné
    // Récupération des ids des membres du service
    // Cache les non membre du service du select html
    $('#ticket_incident_service').change(function() 
	{
        // On sauvegarde le nom de l'intervenant selectionné
        var intervenant = $('#ticket_incident_user').val();

        // Lors d'un changement de choix de service : On redéfini le select d'origin pour supprimer toutes les classes cacher
        $('#ticket_incident_user').html(sauvegarde_select_user);

		var intervenant_identique = false;
        $.ajax("{{ path('lci_ajax_bons_select_service') }}",
        {
            async: false,
            method: "POST",
            data: {service:$('#ticket_incident_service option:selected').text() },
            success: function(data, textStatus, jqXHR) {
                // Lors du retour de la demande Ajax, soit on récupère un tableau avec les id des membres du service soit on recoit une chaine de caractère vide
                // Si on recoit la chaine de c. on ne fait pas de changement au tableau des intervenants
                if (data != '') {
                    var t_data = JSON.parse(data);
                    $('#ticket_incident_user option').each(function()
					{
                        if (($.inArray(parseInt($(this).prop('value')), t_data) == -1) && ($(this).prop('value') != ''))
                        {
                            $(this).addClass('cacher');
                        } else {
                            // On regarde si l'intervenant précédemment selectionné se trouve dans la liste des intervants du service selectionné
                            // Si oui on le reselectionnera
                            if ($(this).val() == intervenant)
                            {
                                intervenant_identique = true;
                            }
						}
                    });
                    if (intervenant_identique == true)
                    {
                        $('#ticket_incident_user').val(intervenant);
                    } else {
                        // Selection de l'option par défaut pour l'intervenant (Choix de l'intervenant)
                        $('#ticket_incident_user option[value=""]').prop('selected', true);
                    }
                }
            },
            error: function(jqXHR, textStatus, errorThrown) {
                console.log('error');
            }
        });
    });

	function checkValidationBeforeSend()
	{
		var $send_form = true;

		// On vérifie la selection d'un site
		if ($('#ticket_incident_site').val() === '')
		{
			$('#ticket_incident_site').addClass('erreur_formulaire');
			$send_form = false;
		}

		// On vérifie l'ajout du numero d'affaire
		if ($('#ticket_incident_numeroAffaire').val() === '')
        {
			$('#ticket_incident_numeroAffaire').addClass('erreur_formulaire');
			$send_form = false;
		}

		// On vérifie qu'un intervenant est selectionné
		if ($('#ticket_incident_user').val() === '')
		{ 
			$('#ticket_incident_user').addClass('erreur_formulaire');
			$send_form = false;
		} 

		// On vérifie la selection d'un contact
		if ($('#select_contact').val() === '')
		{
			$('#select_contact').addClass('erreur_formulaire');
			$send_form = false;
		}

		// On vérifie la présence du motif de création du ticket
		if ($('#ticket_incident_motif').val() === '')
        {
            $('#ticket_incident_motif').addClass('erreur_formulaire');
            $send_form = false;
        }
		

		// On vérifie que pour le contact selectionné, il y a soit un email soit un téléphone
		if (($('#ticket_incident_emailContactClient').val() === '') && ($('#ticket_incident_telephoneContactClient').val() === ''))
		{
			$('#ticket_incident_emailContactClient').addClass('erreur_formulaire');
			$('#ticket_incident_telephoneContactClient').addClass('erreur_formulaire');
            $send_form = false;
		}

		if ($send_form === true)
		{
			attendreRechargement();

			// On indique que le formulaire du bon sera envoyé pour être sauvegardé en base
			$('#enregistrement').val("oui");

			document.forms['myForm'].submit(); 
		}
	}

	function resetCheck()
    {
		$('#ticket_incident_site').removeClass('erreur_formulaire');
		$('#ticket_incident_numeroAffaire').removeClass('erreur_formulaire');
		$('#ticket_incident_user').removeClass('erreur_formulaire');
		$('#select_contact').removeClass('erreur_formulaire');
		$('#ticket_incident_emailContactClient').removeClass('erreur_formulaire');
		$('#ticket_incident_telephoneContactClient').removeClass('erreur_formulaire');
		$('#ticket_incident_motif').removeClass('erreur_formulaire');
	}



    function checkValidationContactBeforeSend()
    {
        var $send = true;

        if ($('#nomContact').val() === '')
        {
            $('#nomContact').addClass('erreur_formulaire');
			$send = false;
        }
        if ($('#prenomContact').val() === '')
        {
            $('#prenomContact').addClass('erreur_formulaire');
            $send = false;
        }
        if (($('#emailContact').val() === '') && ($('#telephoneContact').val() === ''))
        {
            $('#emailContact').addClass('erreur_formulaire');
			$('#telephoneContact').addClass('erreur_formulaire');
            $send = false;
        }
		if ($('#fonctionContact').val() === '')
        {
            $('#fonctionContact').addClass('erreur_formulaire');
            $send = false;
        }

		return $send;
    }

/******************************         FONCTIONS POUR LES FICHIERS         ***************************************/


    // Fonction de suppression d'un fichier d'un siteBA
    function supprimeFile($idFile)
    {
        $.ajax({
            url: "{{ path('lci_ajax_siteBA_del_file') }}",
            data: {'id_file':$idFile },
            success: function(msg)
            {
                console.log('fichier du site supprimé');
            },
            error: function(status, msg, tri) {
                alert('error ' + msg + tri);
            }
        });
    }



	function retireBAFile($ind)
	{
		var id_lien_suppression = '#ticket_incident_fichiersPdf_' + $ind;
		// On retire les fichiers du bon
		$(id_lien_suppression + ' + a').trigger('click');
		// On retire le fichier de l'affichage HTML
		$('#encartFichierBA_' + $ind).remove();
	}



/******************************			FONCTIONS POUR LES CONTACTS 		***************************************/
    function creerContact2()
    {
        var $send_form = true;


        // Vérification des chmaps du contact
        if($('#contact_nom').val() === '')
        {
            $('#contact_nom').addClass('erreur_formulaire');
            $send_form = false;
        }
        if( ($('#contact_telephone').val() === '') && ($('#contact_mail').val() === '') )
        {
            $('#contact_telephone').addClass('erreur_formulaire');
            $('#contact_mail').addClass('erreur_formulaire');
            $send_form = false;
        }
        if($('#contact_fonction').val() === '')
        {
            $('#contact_fonction').addClass('erreur_formulaire');
            $send_form = false;
        }

        // Si la vérification est ok (pas de champs obligatoire vides) : Envoi du formulaire
        if ($send_form === true)
        {
            attendreRechargement();

            $.ajax({
                url: "{{ path('lci_ajax_siteba_new_contact') }}",
                method: "POST",
                data: $('form[name="contact"]').serialize(),
                success: function(output, status, xhr)
                {
                    try {
                        // On recoit une réponse ajax : Le contact a été enregistré
                        data = JSON.parse(output);


                        // Remplissage des champs indiquant la création d'un nouvel objet
                        var $id_nouveau_contact = data['message'];
                        $('#ticket_incident_idNouveau').val($id_nouveau_contact);
                        $('#ticket_incident_typeNouveau').val('contact');
                        // Recherche de l'id du site du nouveau contact
                        $('#ticket_incident_site option').each(function()
                        {
                            if($(this).text() == $('#contact_siteBA option:selected').text())
                            {
                                $('#ticket_incident_siteNouveau').val($(this).val());
                                return false;
                            }
                        });

                        // On reset le formulaire contact
                        $('#contact_reset').trigger('click');

                        // On ferme la popup contact
                        retourPopupContact2();

                        // Rechargement de la page
                        document.forms['myForm'].submit();
                    } catch(e) {
                        finAttendreRechargement
                        // On ne recoit pas une réponse Ajax : on recoit donc le formulaire HTML avec les erreurs
                        var form_html = output;
                        $('#popupContact2').html(form_html);
                    }
                },
                error: function (xhr, status, st_text)
                {
                    finAttendreRechargement();
                    alert('error');
                }
            });
        }
    }


    function gestionDesContacts2()
    {
        // Si la selection du select de site n'est pas vide on affiche le formulaire en lui définissant le même site que celui selectionné
        if ($('#ticket_incident_site').val() != '')
        {
            $("#contact_siteBA option[value='" + $('#ticket_incident_site').val() + "']").prop('selected', true);
        }

        // Si le select de contact n'est pas vide on recherche les informations liés au contact pour pré remplir le formulaire de contact
        if ($('#select_contact').val() != '')
        {
            $('#select_contact').trigger('change');
        }
        togglePopUp(popupContact2);
    }


    function resetInfosContact()
    {
        /* On réinitialise les valeurs de la fiche client et du contact associé au bon */
        $('#contact_id').val('');
        $('#contact_nom').val('');
        $('#contact_prenom').val('');
        $('#contact_mail').val('');
        $('#contact_telephone').val('');
        $('#contact_fonction').val('');
        $('#ticket_incident_nomDuContact').val('');
        $('#ticket_incident_emailContactClient').val('');
        $('#ticket_incident_telephoneContactClient').val('');

        $($("#bloc_contact_pour_impression")).html('');
    }


    function retourPopupContact2()
    {
        $('#contact_nom').removeClass('erreur_formulaire');
        $('#contact_telephone').removeClass('erreur_formulaire');
        $('#contact_mail').removeClass('erreur_formulaire');
        $('#contact_fonction').removeClass('erreur_formulaire');


        $('#contact_reset').trigger('click');

        togglePopUp(popupContact2);
    }


    function modifierContact()
    {
        if (checkValidationContactBeforeSend() === true)
        {
            // Fermeture de la popup contact
            togglePopUp(bonsNouveauContact);

            var $refreshContact;
            $url_modif          = "{{ path('lci_ajax_bon_contact_modif') }}";
            $id_contact_modif   = $('#idContact').val();
            $nom                = $('#nomContact').val();
            $prenom             = $('#prenomContact').val();
            $email              = $('#emailContact').val();
            $tel                = $('#telephoneContact').val();
            $fonction           = $('#fonctionContact').val();

            // On sauvegarde la valeur de l'option du contact selectionné pour le reselectionner après modification
            $opt_select_contact_val = $('#select_contact').val();
            $.ajax({
                url: $url_modif,
                method: "post",
                data: {'id_contact_modif':$id_contact_modif, 'nomContact':$nom, 'prenomContact':$prenom, 'telephoneContact':$tel, 'emailContact':$email, 'fonctionContact':$fonction},
                success: function(msg)
                {
                    // Après la modification d'un contact on réaffiche le site
                    $('#ticket_incident_site').trigger('change');
                }
            });
        }
    }

    function supprimerContact()
    {
        $url_supp = "{{ path('lci_ajax_bon_contact_supp') }}";
        $id_contact_supp = $('#idContact').val();
        $.ajax({
            url: $url_supp,
            method: "post",
            data: {'id_contact_supp':$id_contact_supp},
            success: function(msg)
            {
                $('#ticket_incident_site').trigger('change');
            }
        });
    }

    function ficheContactPourImpression($index_tab_contact)
    {
        var $container = $($("#bloc_contact_pour_impression"));
        var $html = '';
        if (($tab_contact[$index_tab_contact]['prenom'] != '') && ($tab_contact[$index_tab_contact]['prenom'] !=  null) && ($tab_contact[$index_tab_contact]['prenom'] != '-'))
        {
            $html += capitalize($tab_contact[$index_tab_contact]['prenom']) + ' ';
        }
        $html += capitalize($tab_contact[$index_tab_contact]['nom']);
        if (($tab_contact[$index_tab_contact]['email'] != '') && ($tab_contact[$index_tab_contact]['email'] != null))
        {
            $html += ' - ' + $tab_contact[$index_tab_contact]['email'];
        }
        if (($tab_contact[$index_tab_contact]['telephone'] != '') && ($tab_contact[$index_tab_contact]['telephone'] != null))
        {
            $html += ' : ' + $tab_contact[$index_tab_contact]['telephone'];
        }
        $html += " ( " + $tab_contact[$index_tab_contact]['fonction'] + " )<br />";
        $container.append($html);
    }

    // Fonction qui ajoute un champs 'Contact au site BA'
    function ajoutChampContactSiteBA()
    {
        // L'identifiant du nouveau champs sera : site_ba_contacts_$indexContactSiteBA_date_maj
        var $nouveauPrototype = $($('#site_ba_contacts').data('prototype').replace(/__name__label__/g, '').replace(/__name__/g, $indexContactSiteBA));

        // Création et ajout d'un lien de suppression en fin de container
        $deleteLink = $('<a href="#" class="mini_link">Supprimer</a>');
        $nouveauPrototype.append($deleteLink);

        // Ajout du listener permettant la suppression du champ fichier lors du clic sur le lien
        $deleteLink.click(function(e)
        {
            $nouveauPrototype.remove();
            e.preventDefault();
            return false;
        });

        // On place le nouveau champs input
        $container_new_contact = $('#container_new_contact');
        $container_new_contact.prepend($nouveauPrototype);

        // On indique les valeur par défaut des champs obligatoire
        var $today = new Date();
        var $val_today = $today.getDate() + '/' + ($today.getMonth() + 1) + '/' +  $today.getFullYear();
        $('#site_ba_contacts_' + $indexContactSiteBA + '_date_maj').val($val_today);
        $('#site_ba_contacts_' + $indexContactSiteBA + '_fonction').val('Contact');
        $('#site_ba_contacts_' + $indexContactSiteBA + '_prenom').val('-');

        // On met en place l'activation js pour l'affichage du calendrier
        setDatePicker();

        // Ajout du prototype a la fin du container
        //$container_contact.prepend($nouveauPrototype);
        // Incrémentation de l'index des contacts
        $indexContactSiteBA ++;
    }

	$("#add-fichierBon").on("click", () => {
		$("#fichierBon").click();
	});
	$("#add-equipBon").on("click", () => {
		$("#equipBon").click();
	});

	// On change l'icône du bouton et le texte de l'infobulle du bouton lié au select
	$('#ticket_incident_site').on('change', function editButton(){
		// Si la valeur est différente de celle par défaut
		if ($('#ticket_incident_site').val() != ''){
			// On change l'image par un crayon
			$('#ticket_incident_site').next(".btn--main").addClass('edit');
			// On modifie l'infobulle par "Modifier"
			$('#ticket_incident_site').next(".btn--main").find('.tooltip').html('Modifier Site');
		} else {
			$('#ticket_incident_site').next(".btn--main").removeClass('edit');
			$('#ticket_incident_site').next(".btn--main").find('.tooltip').html('Créer Site')
		}
 	});
 	// Même chose pour les contacts 
	$('#select_contact').on('change', function editButton(){
		// Si la valeur est différente de celle par défaut
		if ($('#select_contact').val() != ''){
			// On change l'image par un crayon
			$('#select_contact').next(".btn--main").addClass('edit');
			// On modifie l'infobulle par "Modifier"
			$('#select_contact').next(".btn--main").find('.tooltip').html('Modifier contact');
		} else {
			$('#select_contact').next(".btn--main").removeClass('edit');
			$('#select_contact').next(".btn--main").find('.tooltip').html('Créer contact')
		}
 	});
 	// Fonction pour changer la bordure de la barre de recherche en focus
 	$(".search-bar__input").on('focus', function searchFocus(){
 		if(!$(this).parents(".search-bar").hasClass('search-bar--focus')){
 			$(this).parents(".search-bar").addClass("search-bar--focus");
 		}
 	});
 	$(".search-bar__input").on('blur', function searchBlur(){
 		if($(this).parents(".search-bar").hasClass("search-bar--focus")){
 			$(this).parents(".search-bar").removeClass("search-bar--focus");
 		}
 	});

</script>

{% include "Equipements/fonction_equipements.js" %}

<script src="https://maps.googleapis.com/maps/api/js?key={{ apiKey }}&libraries=places&callback=initAutocomplete">
</script>


{% endblock javascript %}
