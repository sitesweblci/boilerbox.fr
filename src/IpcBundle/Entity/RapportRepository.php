<?php

namespace Ipc\ProgBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * RapportRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RapportRepository extends EntityRepository {

    public function myCount() {
        return $this    
			->createQueryBuilder('r')
			->select('COUNT(r)')
            ->getQuery()
            ->getSingleScalarResult();
    }

    public function myFindAll() {
        $qb = $this
            ->createQueryBuilder('r')
            ->leftJoin('r.localisation', 'loc')
            ->addSelect('loc')
            ->leftJoin('r.site','s')
            ->addSelect('s')
			->leftJoin('r.fichiersrapport', 'f')
			->addSelect('f')
            ->orderBy('r.dateRapport', 'ASC');
        $query = $qb->getQuery();
        $result = $query->getArrayResult();
		//echo "requete : ".$query->getDql();
        return $result;
    }

    public function myFindAfter($date_debut) {
        $qb = $this
            ->createQueryBuilder('r')
            ->leftJoin('r.localisation', 'loc')
            ->addSelect('loc')
            ->leftJoin('r.site','s')
            ->addSelect('s')
            ->leftJoin('r.fichiersrapport', 'f')
            ->addSelect('f')
            ->where('r.dateRapport > :dateDebut')
            ->setParameter('dateDebut', $date_debut)
            ->orderBy('r.dateRapport', 'ASC');
        $query = $qb->getQuery();
        $result = $query->getArrayResult();
        return $result;
    }

    public function myFindBefore($date_fin) {
        $qb = $this
            ->createQueryBuilder('r')
            ->leftJoin('r.localisation', 'loc')
            ->addSelect('loc')
            ->leftJoin('r.site','s')
            ->addSelect('s')
            ->leftJoin('r.fichiersrapport', 'f')
            ->addSelect('f')
            ->where('r.dateRapport < :dateFin')
            ->setParameter('dateFin', $date_fin)
            ->orderBy('r.dateRapport', 'ASC');
        $query = $qb->getQuery();
        $result = $query->getArrayResult();
        return $result;
    }

    public function myFindBetween($date_debut, $date_fin) {
        $qb = $this->createQueryBuilder('r');
        $qb	->leftJoin('r.localisation', 'loc')
            ->addSelect('loc')
            ->leftJoin('r.site','s')
            ->addSelect('s')
            ->leftJoin('r.fichiersrapport', 'f')
            ->addSelect('f')
			->where($qb->expr()->between('r.dateRapport', ':dateDebut', ':dateFin'))
            ->setParameters(array('dateDebut' => $date_debut, 'dateFin' => $date_fin))
            ->orderBy('r.dateRapport', 'ASC');
        $query = $qb->getQuery();
        $result = $query->getArrayResult();
        return $result;
    }



}
